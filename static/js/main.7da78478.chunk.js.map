{"version":3,"sources":["assets/MagnifyingGlass.svg","context/AuthContext.js","components/StackoverflowLogo.js","components/SearchForm.js","components/UserButton.js","components/LogoutButton.js","components/SignupButton.js","components/LoginButton.js","components/Header.js","pages/SignupPage.js","pages/LoginPage.js","utils/useAxios.js","components/Loader.js","pages/AskQuesPage.js","pages/ProfilePage.js","pages/EditProfilePage.js","components/UpVoteTri.js","components/DownVoteTri.js","components/CreatedInfo.js","pages/QuestionPage.js","pages/EditAnswerPage.js","assets/NotFound.svg","pages/SearchedQuesPage.js","utils/PrivateRoute.js","pages/QuestionsPage.js","pages/PageNotFound.js","App.js","index.js"],"names":["_g","AuthContext","createContext","AuthProvider","children","useState","localStorage","getItem","JSON","parse","authTokens","setAuthTokens","jwt_decode","user","setUser","loading","setLoading","show","setShow","alertType","setAlertType","alertMsg","setAlertMsg","spinnerLoading","setSpinnerLoading","baseUrl","navigate","useNavigate","loginUser","e","a","preventDefault","fetch","method","headers","body","stringify","target","username","value","password","response","json","data","status","access","setItem","handleVisibility","setTimeout","contextData","logoutUser","removeItem","viewsFormatter","num","toFixed","replace","strFormatter","str","length","newStr","substring","useEffect","Provider","StackoverflowLogo","className","to","width","height","viewBox","d","fill","SearchForm","searchQues","setSearchQues","Form","action","Group","Control","onChange","autoComplete","type","placeholder","style","UserButton","useContext","Button","variant","LogoutButton","onClick","SignupButton","LoginButton","Header","Navbar","sticky","bg","expand","Brand","Toggle","Collapse","id","Nav","Fragment","Item","SignupPage","setUsername","setPassword","confirmPassword","setConfirmPassword","document","title","signUp","Container","Alert","onClose","dismissible","Card","Body","Title","Text","onSubmit","name","required","size","textDecoration","LoginPage","useAxios","axiosInstance","axios","create","Authorization","interceptors","request","use","req","dayjs","unix","exp","diff","post","refresh","Loader","AskQuesPage","api","slug","useParams","setTitle","setBody","tags","setTags","getQuestion","get","questionData","createQuestion","formData","questionSlug","updateQuestion","put","as","rows","ProfilePage","isAuthorized","setIsAuthorized","fullName","setFullName","email","setEmail","location","setLocation","bio","setBio","questions","setQuestions","answers","setAnswers","getProfile","useCallback","userData","userQuestions","userAnswers","full_name","authorized","deleteQues","delete","deleteAns","answerId","Row","Col","map","question","answer","question_slug","EditProfilePage","update","setUpdate","createProfile","updateProfile","UpVoteTri","border","borderColor","DownVoteTri","CreatedInfo","props","time","QuestionPage","quesId","setQuesId","quesTitle","setQuesTitle","quesBody","setQuesBody","quesTags","setQuesTags","quesUser","setQuesUser","quesSlug","setQuesSlug","quesCreatedAt","setQuesCreatedAt","quesViews","setQuesViews","quesVotes","setQuesVotes","setAnswer","quesData","created_at","views","votes","answerCreate","getElementById","upVoteQues","downVoteQues","upVoteAns","ansId","downVoteAns","xs","lg","split","tag","index","ans","EditAnswerPage","pk","getAnswer","updateAnswer","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMagnifyingGlass","_ref","svgRef","titleId","enableBackground","xmlSpace","xmlns","xmlnsXlink","ref","ForwardRef","SearchedQuesPage","search","searchedQuestions","setSearchedQuestions","isQuestions","setIsQuestions","getSearchedQues","marginTop","color","flex","ans_count","md","PrivateRoute","QuestionsPage","questionOrder","setQuestionOrder","getQuestions","viewBy","latestQuestions","SvgNotFound","cx","cy","r","PageNotFound","App","path","element","ReactDOM","render","StrictMode"],"mappings":"2OAAIA,E,mICIEC,EAAcC,0BAELD,IAEFE,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC1B,EAAoCC,oBAAS,kBAAKC,aAAaC,QAAQ,cAAgBC,KAAKC,MAAMH,aAAaC,QAAQ,eAAiB,QAAxI,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBN,oBAAS,kBAAKC,aAAaC,QAAQ,cAAgBK,YAAWN,aAAaC,QAAQ,eAAiB,QAA5H,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA8BT,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAEA,EAAwBX,oBAAS,GAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAAkCb,mBAAS,IAA3C,mBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAA+Bf,mBAAS,IAAxC,mBAAMgB,EAAN,KAAgBC,EAAhB,KAEA,EAA4CjB,oBAAS,GAArD,mBAAOkB,EAAP,KAAuBC,EAAvB,KAIMC,EAAU,sCAEVC,EAAWC,cAEXC,EAAS,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACdD,EAAEE,iBADY,SAESC,MAAM,GAAD,OAAIP,EAAJ,eAA0B,CAClDQ,OAAO,OACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAK3B,KAAK4B,UAAU,CAAC,SAAWP,EAAEQ,OAAOC,SAASC,MAAO,SAAWV,EAAEQ,OAAOG,SAASD,UAP5E,cAERE,EAFQ,gBASKA,EAASC,OATd,OASRC,EATQ,OAWS,MAApBF,EAASG,QACRjC,EAAcgC,GACd7B,EAAQF,YAAW+B,EAAKE,SACxBvC,aAAawC,QAAQ,aAActC,KAAK4B,UAAUO,IAClDvB,EAAa,WACbE,EAAY,WAAD,OAAYV,YAAW+B,EAAKE,QAAQP,WAC/CS,IACArB,EAAS,gBAGTN,EAAa,UACbE,EAAY,qBACZyB,KAvBU,2CAAH,sDAsCTA,EAAmB,WACrB7B,GAAQ,GACR8B,YAAW,WACP9B,GAAQ,KACT,MA0BD+B,EAAc,CAChBpC,KAAMA,EACNC,QAASA,EACTJ,WAAYA,EACZC,cAAeA,EACfiB,UAAWA,EACXsB,WA9Ce,WACfvC,EAAc,MACdG,EAAQ,MACRR,aAAa6C,WAAW,cACxB/B,EAAa,QACbE,EAAY,4BACZyB,IACArB,EAAS,WAwCTT,KAAMA,EACNC,QAASA,EACTC,UAAWA,EACXC,aAAcA,EACdC,SAAUA,EACVC,YAAaA,EACbyB,iBAAkBA,EAClBK,eApCmB,SAAAC,GACnB,OAAIA,GAAO,KACAA,EAAM,KAASC,QAAQ,GAAGC,QAAQ,OAAQ,IAAM,IAEvDF,GAAO,KACAA,EAAM,KAAMC,QAAQ,GAAGC,QAAQ,OAAQ,IAAM,IAEjDF,GA8BP5B,QAASA,EACT+B,aA3BgB,SAAAC,GAChB,GAAGA,EAAIC,QAAU,IAAI,CACjB,IAAIC,EAASF,EAAIG,UAAU,EAAG,KAC9B,MAAM,GAAN,OAAUD,EAAV,OAGA,OAAOF,GAsBXlC,eAAgBA,EAChBC,kBAAmBA,GAcvB,OAVAqC,qBAAU,WAEHnD,GACCI,EAAQF,YAAWF,EAAWmC,SAGlC7B,GAAW,KAEZ,CAACN,EAAYK,IAGZ,cAACd,EAAY6D,SAAb,CAAsBvB,MAAOU,EAA7B,SACKlC,EAAU,KAAOX,KCnHf2D,EATW,WACtB,OACI,eAAC,IAAD,CAAMC,UAAU,OAAOC,GAAG,aAA1B,UACI,sBAAK,cAAY,OAAOD,UAAU,kCAAkCE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAnG,UAA+G,sBAAMC,EAAE,8BAA8BC,KAAK,YAAiB,sBAAMD,EAAE,+KAA+KC,KAAK,eACvW,uBAAMN,UAAU,cAAhB,oBAAqC,gD,SCmBlCO,EAvBI,WAEf,MAAoClE,mBAAS,IAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KAEA,OAEI,cAACC,EAAA,EAAD,CAAMC,OAAM,qBAAgBH,GAAcR,UAAU,SAApD,SACI,cAACU,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKG,QAAN,CACIC,SAAU,SAAAjD,GAAC,OAAI4C,EAAc5C,EAAEQ,OAAOE,QACtCwC,aAAa,MACbC,KAAK,SACLC,YAAY,kBACZ,aAAW,SACXjB,UAAU,iBACVkB,MAAO,CAAChB,MAAO,gB,SCJpBiB,EATI,WAEf,IAAQtE,EAASuE,qBAAWnF,GAApBY,KAER,OACI,cAAC,IAAD,CAAMmD,UAAU,WAAWC,GAAE,mBAAcpD,EAAI,UAA/C,SAA+D,cAACwE,EAAA,EAAD,CAAQC,QAAQ,UAAhB,SAA2BzE,EAAI,cCIvF0E,EATM,WAEjB,IAAQrC,EAAekC,qBAAWnF,GAA1BiD,WAER,OACI,cAAC,IAAD,CAAMc,UAAU,WAAWC,GAAG,SAA9B,SAAuC,cAACoB,EAAA,EAAD,CAAQG,QAAStC,EAAYoC,QAAQ,kBAArC,wBCAhCG,EANM,WACjB,OACI,cAAC,IAAD,CAAMzB,UAAU,WAAWC,GAAG,UAA9B,SAAwC,cAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAhB,wBCIjCI,EANK,WAChB,OACI,cAAC,IAAD,CAAM1B,UAAU,WAAWC,GAAG,SAA9B,SAAuC,cAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAhB,uBCuChCK,EA9BA,WAEX,IAAQ9E,EAASuE,qBAAWnF,GAApBY,KAER,OACI,eAAC+E,EAAA,EAAD,CAAQC,OAAO,MAAMC,GAAG,QAAQC,OAAO,KAAvC,UACI,cAACH,EAAA,EAAOI,MAAR,UAAc,cAAC,EAAD,MACd,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,iBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBlC,UAAU,sBAAsBmC,GAAG,eAApD,SACI,cAACC,EAAA,EAAD,UACEvF,EACE,cAAC,IAAMwF,SAAP,UACI,sBAAKrC,UAAU,aAAf,UACI,cAAC,EAAD,IACA,cAACoC,EAAA,EAAIE,KAAL,UAAU,cAAC,EAAD,MACV,cAACF,EAAA,EAAIE,KAAL,UAAU,cAAC,EAAD,WAIlB,eAAC,IAAMD,SAAP,WACI,cAACD,EAAA,EAAIE,KAAL,UAAU,cAAC,EAAD,MACV,cAACF,EAAA,EAAIE,KAAL,UAAU,cAAC,EAAD,iB,2BC6DnBC,EA1FI,WAEf,MASoBnB,qBAAWnF,GATvBY,EAAR,EAAQA,KACAe,EADR,EACQA,UACAP,EAFR,EAEQA,SACAF,EAHR,EAGQA,UACAG,EAJR,EAIQA,YACAF,EALR,EAKQA,aACAH,EANR,EAMQA,KACAC,EAPR,EAOQA,QACA6B,EARR,EAQQA,iBACAtB,EATR,EASQA,QAER,EAAgCpB,mBAAS,IAAzC,mBAAOiC,EAAP,KAAiBkE,EAAjB,KACA,EAAgCnG,mBAAS,IAAzC,mBAAOmC,EAAP,KAAiBiE,EAAjB,KACA,EAA8CpG,mBAAS,IAAvD,mBAAOqG,EAAP,KAAwBC,EAAxB,KAEMjF,EAAWC,cAEdd,GACCa,EAAS,cAGbkF,SAASC,MAAQ,UAEjB,IAAMC,EAAM,uCAAG,WAAOjF,GAAP,iBAAAC,EAAA,6DACXD,EAAEE,iBADS,SAEYC,MAAM,GAAD,OAAIP,EAAJ,cAAwB,CAChDQ,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAM3B,KAAK4B,UAAU,CACjB,SAAYE,EACZ,SAAYE,EACZ,gBAAmBkE,MAVhB,UAcY,OAZjBjE,EAFK,QAcCG,OAdD,iCAeYH,EAASC,OAfrB,OAeDC,EAfC,OAgBPvB,EAAa,UACTuB,EAAI,SACJrB,EAAYqB,EAAI,SAAa,IACxBA,EAAI,kBACTrB,EAAYqB,EAAI,iBAAqB,IAEzCI,IAtBO,wBAwBPnB,EAAUC,GAxBH,4CAAH,sDA8BZ,OACI,eAACkF,EAAA,EAAD,WACM9F,EAEE,cAAC+F,EAAA,EAAD,CAAO1B,QAASnE,EAAW6C,UAAU,cAAciD,QAAS,kBAAM/F,GAAQ,IAAQgG,aAAW,EAA7F,SAA+F7F,IAE/F,KAEJ,cAAC8F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,CAAYrD,UAAU,cAAtB,SAAoC,2CACpC,uBACA,cAACmD,EAAA,EAAKG,KAAN,UACI,eAAC5C,EAAA,EAAD,CAAM6C,SAAUT,EAAhB,UACI,cAACpC,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAc2C,KAAK,WAAW1C,SAAU,SAAAjD,GAAC,OAAI2E,EAAY3E,EAAEQ,OAAOE,QAAQyC,KAAK,OAAOC,YAAY,WAAWwC,UAAQ,MAEzH,cAAC/C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAc2C,KAAK,WAAW1C,SAAU,SAAAjD,GAAC,OAAI4E,EAAY5E,EAAEQ,OAAOE,QAAQyC,KAAK,WAAWC,YAAY,WAAWwC,UAAQ,MAE7H,cAAC/C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAc2C,KAAK,kBAAkB1C,SAAU,SAAAjD,GAAC,OAAI8E,EAAmB9E,EAAEQ,OAAOE,QAAQyC,KAAK,WAAWC,YAAY,mBAAmBwC,UAAQ,MAEnJ,qBAAKzD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,kBAAkBN,KAAK,SAAS0C,KAAK,KAArD,4BAIZ,sBAAK1D,UAAU,cAAf,sCAAsD,cAAC,IAAD,CAAMkB,MAAO,CAACyC,eAAgB,QAAS1D,GAAG,SAA1C,gCCd3D2D,EArEG,WAEd,MAKoBxC,qBAAWnF,GALvB2B,EAAR,EAAQA,UACAf,EADR,EACQA,KACAI,EAFR,EAEQA,KACAE,EAHR,EAGQA,UACAE,EAJR,EAIQA,SACAH,EALR,EAKQA,QAEFQ,EAAWC,cAEjBiF,SAASC,MAAQ,SAEdhG,GACCa,EAAS,cAQb,OACI,eAACqF,EAAA,EAAD,WACM9F,EAEF,cAAC+F,EAAA,EAAD,CAAO1B,QAASnE,EAAW6C,UAAU,cAAciD,QAAS,kBAAM/F,GAAQ,IAAQgG,aAAW,EAA7F,SAA+F7F,IAE/F,KAGA,cAAC8F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,CAAYrD,UAAU,cAAtB,SAAoC,0CACpC,uBACA,cAACmD,EAAA,EAAKG,KAAN,UAIA,eAAC5C,EAAA,EAAD,CAAM6C,SAtBF,SAAC1F,GACjBD,EAAUC,IAqBE,UAII,cAAC6C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAc2C,KAAK,WAAWxC,KAAK,OAAOC,YAAY,WAAWwC,UAAQ,MAK7E,cAAC/C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAc2C,KAAK,WAAWxC,KAAK,WAAWC,YAAY,WAAWwC,UAAQ,MAKjF,qBAAKzD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,kBAAkBoC,KAAK,KAArD,2BAMR,sBAAK1D,UAAU,cAAf,oCAAoD,cAAC,IAAD,CAAMkB,MAAO,CAACyC,eAAgB,QAAS1D,GAAG,UAA1C,iC,kCC9BzD4D,EAhCE,WACb,MAAsDzC,qBAAWnF,GAA1DS,EAAP,EAAOA,WAAYI,EAAnB,EAAmBA,QAASH,EAA5B,EAA4BA,cAAec,EAA3C,EAA2CA,QAErCqG,EAAgBC,IAAMC,OAAO,CAC/BvG,UACAS,QAAQ,CACJ+F,cAAc,UAAD,cAAYvH,QAAZ,IAAYA,OAAZ,EAAYA,EAAYmC,WAuB7C,OAnBAiF,EAAcI,aAAaC,QAAQC,IAAnC,+BAAAtG,EAAA,MAAuC,WAAMuG,GAAN,iBAAAvG,EAAA,yDAE7BjB,EAAOD,YAAWF,EAAWmC,QACjByF,IAAMC,KAAK1H,EAAK2H,KAAKC,KAAKH,OAAW,EAHpB,yCAIbD,GAJa,uBAMZN,IAAMW,KAAN,UAAcjH,EAAd,uBAA4C,CAC/DkH,QAASjI,EAAWiI,UAPW,cAM7BlG,EAN6B,OAUnCnC,aAAawC,QAAQ,aAActC,KAAK4B,UAAUK,EAASE,OAE3DhC,EAAc8B,EAASE,MACvB7B,EAAQF,YAAW6B,EAASE,KAAKE,SAEjCwF,EAAInG,QAAQ+F,cAAZ,iBAAsCxF,EAASE,KAAKE,QAfjB,kBAgB5BwF,GAhB4B,4CAAvC,uDAmBOP,GCtBIc,G,aARA,WACb,OACE,cAAC7B,EAAA,EAAD,CAAW/C,UAAU,mBAArB,SACE,qBAAKA,UAAU,eCwKN6E,EApKK,WAEhB,MAOoBzD,qBAAWnF,GAPvBmB,EAAR,EAAQA,aACAE,EADR,EACQA,YACAL,EAFR,EAEQA,KACAE,EAHR,EAGQA,UACAD,EAJR,EAIQA,QACAG,EALR,EAKQA,SACA0B,EANR,EAMQA,iBACAtB,EAPR,EAOQA,QAEFqH,EAAMjB,IAENnG,EAAWC,cAEVoH,EAAQC,cAARD,KAEP,EAA0B1I,mBAAS,IAAnC,mBAAOwG,EAAP,KAAcoC,EAAd,KACA,EAAwB5I,mBAAS,IAAjC,mBAAO8B,EAAP,KAAa+G,EAAb,KACA,EAAwB7I,mBAAS,IAAjC,mBAAO8I,EAAP,KAAaC,EAAb,KAEA,EAA8B/I,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAGA4F,SAASC,MAAQ,iBAEjBhD,qBAAU,WACHkF,IACC/H,GAAW,GACXqI,OAGL,IAGH,IAAMA,EAAW,uCAAG,gCAAAvH,EAAA,sEACOgH,EAAIQ,IAAJ,UAAW7H,EAAX,qBAA+BsH,EAA/B,MADP,cACVtG,EADU,gBAEGA,EAAQ,KAFX,OAEVE,EAFU,OAGV4G,EAAe5G,EAAI,SACzBsG,EAASM,EAAa1C,OACtBqC,EAAQK,EAAapH,MACrBiH,EAAQG,EAAaJ,MAErBnI,GAAW,GARK,4CAAH,qDAsBXwI,EAAc,uCAAG,kCAAA1H,EAAA,6DACb2H,EAAWjJ,KAAK4B,UAAU,CAAC,MAAQyE,EAAO,KAAO1E,EAAM,KAAOgH,IADjD,SAEIL,EAAIJ,KAAJ,UAAYjH,EAAZ,cAAiCgI,EAAU,CAC9DvH,QAAQ,CACJ,eAAgB,sBAJL,UAOY,OALzBO,EAFa,QAOR,KAASG,OAPD,iCAQIH,EAAQ,KAASE,KARrB,OAQTA,EARS,OAST+G,EAAe/G,EAAKoG,KAC1B3H,EAAa,WACbE,EAAY,mBACZyB,IACArB,EAAS,aAAD,OAAcgI,IAbP,wBAeftI,EAAa,UACbE,EAAY,0DACZyB,IAjBe,4CAAH,qDAsBd4G,EAAc,uCAAG,gCAAA7H,EAAA,6DACb2H,EAAWjJ,KAAK4B,UAAU,CAAC,MAAQyE,EAAO,KAAO1E,EAAM,KAAOgH,IADjD,SAEIL,EAAIc,IAAJ,UAAWnI,EAAX,qBAA+BsH,EAA/B,KAAwCU,EAAU,CACrEvH,QAAQ,CACJ,eAAgB,sBAJL,OAOI,OALjBO,EAFa,QAOPG,SACFmG,EAAOtG,EAAQ,KAASsG,KAC9B3H,EAAa,WACbE,EAAY,oBACZyB,IACArB,EAAS,aAAD,OAAcqH,KAZP,2CAAH,qDAiBpB,OACI,cAAChC,EAAA,EAAD,UAEMhG,EACE,cAAC,EAAD,IAEJ,eAAC,IAAMsF,SAAP,WAEEpF,EAEF,cAAC+F,EAAA,EAAD,CAAO1B,QAASnE,EAAW6C,UAAU,cAAciD,QAAS,kBAAM/F,GAAQ,IAAQgG,aAAW,EAA7F,SAA+F7F,IAE/F,KAGA,oBAAI2C,UAAU,cAAd,mCAGA,cAACmD,EAAA,EAAD,UACI,cAACzC,EAAA,EAAD,CAAM6C,SApEG,SAAA1F,GACjBA,EAAEE,iBACCgH,EACCY,IAEAH,KA+DI,SACI,eAACrC,EAAA,EAAKC,KAAN,WAII,cAACD,EAAA,EAAKE,MAAN,CAAYrD,UAAU,gBAAtB,mBACA,cAACmD,EAAA,EAAKG,KAAN,CAAWtD,UAAU,gBAArB,sFAGA,cAACU,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcG,KAAK,OAAOzC,MAAOsE,EAAOW,KAAK,QAAQ1C,SAAU,SAAAjD,GAAC,OAAIoH,EAASpH,EAAEQ,OAAOE,QAAS0C,YAAY,+EAA+EwC,UAAQ,MAKtM,cAACN,EAAA,EAAKE,MAAN,CAAYrD,UAAU,gBAAtB,kBACA,cAACmD,EAAA,EAAKG,KAAN,CAAWtD,UAAU,gBAArB,qFAGA,cAACU,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAc2C,KAAK,OAAOjF,MAAOJ,EAAM2C,SAAU,SAAAjD,GAAC,OAAIqH,EAAQrH,EAAEQ,OAAOE,QAAQsH,GAAG,WAAWC,KAAM,EAAGrC,UAAQ,MAKlH,cAACN,EAAA,EAAKE,MAAN,CAAYrD,UAAU,gBAAtB,kBACA,cAACmD,EAAA,EAAKG,KAAN,CAAWtD,UAAU,gBAArB,sEAGA,cAACU,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcG,KAAK,OAAOzC,MAAO4G,EAAM3B,KAAK,OAAO1C,SAAU,SAAAjD,GAAC,OAAIuH,EAAQvH,EAAEQ,OAAOE,QAAQ0C,YAAY,kCAAkCwC,UAAQ,MAKrJ,qBAAKzD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,kBAAkBN,KAAK,SAAS0C,KAAK,KAArD,+C,iBCsFbqC,G,OA9OK,WAEhB,MASyB3E,qBAAWnF,GAT5BY,EAAR,EAAQA,KACAI,EADR,EACQA,KACAE,EAFR,EAEQA,UACAE,EAHR,EAGQA,SACAH,EAJR,EAIQA,QACAE,EALR,EAKQA,aACAE,EANR,EAMQA,YACAyB,EAPR,EAOQA,iBACAtB,EARR,EAQQA,QACA+B,EATR,EASQA,aAER,EAAwCnD,oBAAS,GAAjD,mBAAO2J,EAAP,KAAqBC,EAArB,KACMvI,EAAWC,cAEXmH,EAAMjB,IAEJvF,EAAa0G,cAAb1G,SAER,EAAgCjC,mBAAS,IAAzC,mBAAO6J,EAAP,KAAiBC,EAAjB,KACA,EAA0B9J,mBAAS,IAAnC,mBAAO+J,EAAP,KAAcC,EAAd,KACA,EAAgChK,mBAAS,IAAzC,mBAAOiK,EAAP,KAAiBC,EAAjB,KACA,EAAsBlK,mBAAS,IAA/B,mBAAOmK,EAAP,KAAYC,EAAZ,KAEA,EAAkCpK,mBAAS,IAA3C,mBAAOqK,EAAP,KAAkBC,GAAlB,KACA,GAA8BtK,mBAAS,IAAvC,qBAAOuK,GAAP,MAAgBC,GAAhB,MAEA,GAA8BxK,oBAAS,GAAvC,qBAAOU,GAAP,MAAgBC,GAAhB,MAEA4F,SAASC,MAAQ,UAEjB,IAAMiE,GAAaC,sBAAW,sBAAC,oCAAAjJ,EAAA,sEACJgH,EAAIQ,IAAJ,UAAW7H,EAAX,oBAA8Ba,EAA9B,MADI,UAEI,OADzBG,EADqB,QAEhB,KAASG,OAFO,gBAGvBlB,EAAS,mBAHc,0BAKC,MAApBe,EAASG,OALU,kCAMJH,EAAQ,KANJ,QAMjBE,EANiB,OAOjBqI,EAAWrI,EAAI,QACfsI,EAAgBtI,EAAI,UACpBuI,EAAcvI,EAAI,QACxBwH,EAAYa,EAASG,WACrBd,EAASW,EAASZ,OAClBG,EAAYS,EAASV,UACrBG,EAAOO,EAASR,KAChBG,GAAaM,GACbJ,GAAWK,GAEXlK,IAAW,GAjBY,4CAmB5B,CAACsB,IAGE8I,GAAaL,uBAAY,WACxBzI,IAAazB,EAAI,UAChBoJ,GAAgB,KAErB,CAAC3H,IAGJuB,qBAAU,WACNiH,KACAM,OAED,CAACN,GAAYM,KAGhB,IAAMC,GAAU,uCAAG,WAAM3B,GAAN,SAAA5H,EAAA,6DAEfd,IAAW,GAFI,SAIQ8H,EAAIwC,OAAJ,UAAc7J,EAAd,qBAAkCiI,IAJ1C,OAKQ,MALR,OAKH9G,SACRkI,KACA1J,EAAa,WACbE,EAAY,oBACZyB,KAEJrB,EAAS,YAAD,OAAab,EAAI,WAXV,2CAAH,sDAeV0K,GAAS,uCAAG,WAAMC,GAAN,SAAA1J,EAAA,6DAEdd,IAAW,GAFG,SAIS8H,EAAIwC,OAAJ,UAAc7J,EAAd,mBAAgC+J,IAJzC,OAKS,MALT,OAKF5I,SACRkI,KACA1J,EAAa,WACbE,EAAY,kBACZyB,KAEJrB,EAAS,YAAD,OAAab,EAAI,WAXX,2CAAH,sDAef,OAII,cAACkG,EAAA,EAAD,UAEMhG,GACE,cAAC,EAAD,IAEA,eAAC,IAAMsF,SAAP,WACEpF,EAEE,cAAC+F,EAAA,EAAD,CAAO1B,QAASnE,EAAW6C,UAAU,cAAciD,QAAS,kBAAM/F,GAAQ,IAAQgG,aAAW,EAA7F,SAA+F7F,IAE/F,KAGJ,cAAC8F,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,CAAYrD,UAAU,cAAtB,SAAoC,6BAAI,4BAAKkG,QAC7C,uBACA,eAAC/C,EAAA,EAAKG,KAAN,CAAWtD,UAAU,eAArB,UACI,4BAAG,oBAAGA,UAAU,8BAAb,cAA6CoG,GAAgB,2BAChE,4BAAG,oBAAGpG,UAAU,gCAAb,cAA+CsG,GAAsB,8BACxE,4BAAG,oBAAGtG,UAAU,iCAAb,cAAgDwG,GAAW,4BAKhER,EACE,cAAC,IAAD,CAAMhG,UAAU,OAAOC,GAAG,gBAA1B,SACI,qBAAKD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,oBAAoBoC,KAAK,KAAzC,SACI,0DAKZ,UAOR,eAAC+D,EAAA,EAAD,WAII,eAACC,EAAA,EAAD,CAAK1H,UAAU,MAAf,UAEA,qBAAIA,UAAU,cAAd,UAA6B0G,EAAUhH,OAA6B,IAArBgH,EAAUhH,OAAe,YAAc,gBACtF,uBACEgH,EAAUiB,KAAI,SAAAC,GAAQ,OAEpB,eAAC,IAAMvF,SAAP,WACI,eAACc,EAAA,EAAD,CAAMnD,UAAU,MAAhB,UAEA,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,oBAAe2H,EAAS7C,KAAxB,KAAzB,SAA0D,qBAAK/E,UAAU,gBAAf,SAAgCR,EAAaoI,EAAS/E,WAE9GmD,EACE,eAAC,IAAM3D,SAAP,WACI,uBAEA,eAACoF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK1H,UAAU,MAAf,SACI,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,2BAAsB2H,EAAS7C,KAA/B,KAAzB,SACI,qBAAK/E,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,yBAAhB,wBAIZ,cAACoG,EAAA,EAAD,CAAK1H,UAAU,MAAf,SACI,qBAAKA,UAAU,eAAewB,QAAS,kBAAM6F,GAAWO,EAAS7C,OAAjE,SACI,cAAC1D,EAAA,EAAD,CAAQC,QAAQ,wBAAhB,8BAOhB,QAIH,yBA9BgBsG,EAASzF,UAuClC,eAACuF,EAAA,EAAD,CAAK1H,UAAU,MAAf,UAEI,qBAAIA,UAAU,cAAd,UAA6B4G,GAAQlH,OAA2B,IAAnBkH,GAAQlH,OAAe,UAAY,cAChF,uBACEkH,GAAQe,KAAI,SAAAE,GAAM,OAChB,eAAC,IAAMxF,SAAP,WACK,eAACc,EAAA,EAAD,CAAMnD,UAAU,MAAhB,UAED,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,oBAAe4H,EAAOC,cAAtB,KAAzB,SAAiE,qBAAK9H,UAAU,gBAAf,SAAgCR,EAAaqI,EAAOA,YAEjH7B,EACA,eAAC,IAAM3D,SAAP,WACA,uBACA,eAACoF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK1H,UAAU,MAAf,SACJ,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAE,uBAAkB4H,EAAO1F,IAAlD,SACI,qBAAKnC,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,yBAAhB,wBAIR,cAACoG,EAAA,EAAD,CAAK1H,UAAU,MAAf,SACA,qBAAKA,UAAU,eAAewB,QAAS,kBAAM+F,GAAUM,EAAO1F,KAA9D,SACI,cAACd,EAAA,EAAD,CAAQC,QAAQ,wBAAhB,8BAMJ,QAIJ,yBA5BiBuG,EAAO1F,oBC5D7C4F,G,OAzIS,WAEpB,MAIoB3G,qBAAWnF,GAJvBY,EAAR,EAAQA,KACAO,EADR,EACQA,aACAE,EAFR,EAEQA,YACAyB,EAHR,EAGQA,iBACAtB,EAJR,EAIQA,QAEFC,EAAWC,cAEXmH,EAAMjB,IAEZ,EAA4BxH,oBAAS,GAArC,mBAAO2L,EAAP,KAAeC,EAAf,KAEA,EAAgC5L,mBAAS,IAAzC,mBAAO6J,EAAP,KAAiBC,EAAjB,KACA,EAA0B9J,mBAAS,IAAnC,mBAAO+J,EAAP,KAAcC,EAAd,KACA,EAAgChK,mBAAS,IAAzC,mBAAOiK,EAAP,KAAiBC,EAAjB,KACA,EAAsBlK,mBAAS,IAA/B,mBAAOmK,EAAP,KAAYC,EAAZ,KAEA,EAA8BpK,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAEA4F,SAASC,MAAQ,sBAEjB,IAUMqF,EAAa,uCAAG,4BAAApK,EAAA,6DACZ2H,EAAWjJ,KAAK4B,UAAU,CAAC,UAAY8H,EAAU,MAAQE,EAAO,SAAWE,EAAU,IAAME,IAD/E,SAEK1B,EAAIJ,KAAJ,UAAYjH,EAAZ,aAAgCgI,EAAU,CAC7DvH,QAAQ,CACJ,eAAgB,sBAJN,OAQK,MARL,OAQNU,SACRxB,EAAa,WACbE,EAAY,mBACZyB,KAEJrB,EAAS,YAAD,OAAab,EAAI,WAbP,2CAAH,qDAiBbsL,EAAa,uCAAG,4BAAArK,EAAA,6DACZ2H,EAAWjJ,KAAK4B,UAAU,CAAC,UAAY8H,EAAU,MAAQE,EAAO,SAAWE,EAAU,IAAME,IAD/E,SAEK1B,EAAIc,IAAJ,UAAWnI,EAAX,oBAA8BZ,EAAI,SAAlC,KAAmD4I,EAAU,CAChFvH,QAAQ,CACJ,eAAgB,sBAJN,OAQK,MARL,OAQNU,SACRxB,EAAa,WACbE,EAAY,mBACZyB,KAEJrB,EAAS,YAAD,OAAab,EAAI,WAbP,2CAAH,qDAiBbiK,EAAU,uCAAG,8BAAAhJ,EAAA,sEACQgH,EAAIQ,IAAJ,UAAW7H,EAAX,oBAA8BZ,EAAI,SAAlC,MADR,cAEQ,OADjB4B,EADS,QAEHG,QACRqJ,GAAU,GAHC,SAKIxJ,EAAQ,KALZ,OAKTE,EALS,OAMfwH,EAAYxH,EAAI,QAAYwI,WAC5Bd,EAAS1H,EAAI,QAAYyH,OACzBG,EAAY5H,EAAI,QAAY2H,UAC5BG,EAAO9H,EAAI,QAAY6H,KAEvBxJ,GAAW,GAXI,4CAAH,qDAqBhB,OANA6C,qBAAU,WACNiH,MAED,IAIC,cAAC/D,EAAA,EAAD,UACMhG,EACE,cAAC,EAAD,IAEJ,cAAC,IAAMsF,SAAP,UACI,eAACc,EAAA,EAAD,WACA,uBACA,cAACA,EAAA,EAAKE,MAAN,CAAYrD,UAAU,cAAtB,SAAoC,yDACpC,uBACA,eAACU,EAAA,EAAD,CAAM6C,SA3EG,SAAA1F,GACjBA,EAAEE,iBACCiK,EACCG,IAEAD,KAsEI,UAII,cAACxH,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcG,KAAK,OAAOzC,MAAO2H,EAAUpF,SAAU,SAAAjD,GAAC,OAAIsI,EAAYtI,EAAEQ,OAAOE,QAAQ0C,YAAY,YAAYwC,UAAQ,MAK3H,cAAC/C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcG,KAAK,QAAQzC,MAAO6H,EAAOtF,SAAU,SAAAjD,GAAC,OAAIwI,EAASxI,EAAEQ,OAAOE,QAAQ0C,YAAY,QAAQwC,UAAQ,MAKlH,cAAC/C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcG,KAAK,OAAOzC,MAAO+H,EAAUxF,SAAU,SAAAjD,GAAC,OAAI0I,EAAY1I,EAAEQ,OAAOE,QAAQ0C,YAAY,WAAWwC,UAAQ,MAK1H,cAAC/C,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcI,YAAY,WAAW1C,MAAOiI,EAAK1F,SAAU,SAAAjD,GAAC,OAAI4I,EAAO5I,EAAEQ,OAAOE,QAAQsH,GAAG,WAAWC,KAAM,EAAGrC,UAAQ,MAK3H,qBAAKzD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,kBAAkBN,KAAK,SAAS0C,KAAK,KAArD,gCCzHT0E,EAhBG,WASd,OACI,8BACI,qBAAKlH,MATM,CACfhB,MAAO,IACPC,OAAQ,IACRkI,OAAQ,aACRC,YAAc,2DAKctI,UAAU,mBCK/BuI,EAhBK,WAShB,OACI,8BACI,qBAAKrH,MATQ,CACjBhB,MAAO,IACPC,OAAQ,IACRkI,OAAQ,aACRC,YAAc,4DAKgBtI,UAAU,qBCFjCwI,EARK,SAACC,GACjB,OACI,8BACI,8CAAgB,uCAAUA,EAAMC,KAAhB,OAAyB,cAAC,IAAD,CAAMxH,MAAO,CAACyC,eAAgB,QAAS1D,GAAE,mBAAcwI,EAAM5L,MAA7D,SAAsE4L,EAAM5L,gBC6SlH8L,G,OArSM,WAEjB,MAQoBvH,qBAAWnF,GARvBmD,EAAR,EAAQA,eACAnC,EADR,EACQA,KACAE,EAFR,EAEQA,UACAE,EAHR,EAGQA,SACAH,EAJR,EAIQA,QACAE,EALR,EAKQA,aACAE,EANR,EAMQA,YACAyB,EAPR,EAOQA,iBACAtB,EARR,EAQQA,QAEFqH,EAAMjB,IAENnG,EAAWC,cAEVoH,EAAQC,cAARD,KAEP,EAA4B1I,mBAAS,GAArC,mBAAOuM,EAAP,KAAeC,EAAf,KACA,EAAkCxM,mBAAS,IAA3C,mBAAOyM,EAAP,KAAkBC,EAAlB,KACA,EAAgC1M,mBAAS,IAAzC,mBAAO2M,EAAP,KAAiBC,EAAjB,KACA,EAAgC5M,mBAAS,IAAzC,mBAAO6M,EAAP,KAAiBC,EAAjB,KACA,EAA+B9M,mBAAS,IAAxC,mBAAO+M,EAAP,KAAgBC,EAAhB,KACA,EAAgChN,mBAAS,IAAzC,mBAAOiN,GAAP,KAAiBC,GAAjB,KACA,GAA0ClN,mBAAS,IAAnD,qBAAOmN,GAAP,MAAsBC,GAAtB,MACA,GAAkCpN,mBAAS,GAA3C,qBAAOqN,GAAP,MAAkBC,GAAlB,MACA,GAAkCtN,mBAAS,GAA3C,qBAAOuN,GAAP,MAAkBC,GAAlB,MAEA,GAA8BxN,mBAAS,IAAvC,qBAAOuK,GAAP,MAAgBC,GAAhB,MACA,GAA4BxK,mBAAS,IAArC,qBAAOwL,GAAP,MAAeiC,GAAf,MAEA,GAA8BzN,oBAAS,GAAvC,qBAAOU,GAAP,MAAgBC,GAAhB,MAEA4F,SAASC,MAAQiG,EAEjB,IAAMzD,GAAW,uCAAG,gCAAAvH,EAAA,sEACOgH,EAAIQ,IAAJ,UAAW7H,EAAX,qBAA+BsH,IADtC,UAEe,OADzBtG,EADU,QAEL,KAASG,OAFJ,gBAGZlB,EAAS,mBAHG,0BAKY,MAApBe,EAASG,OALD,kCAMOH,EAAQ,KANf,QAMNE,EANM,OAONoL,EAAWpL,EAAI,SACrBkK,EAAUkB,EAAS5H,IACnB4G,EAAagB,EAASlH,OACtBoG,EAAYc,EAAS5L,MACrBgL,EAAYY,EAAS5E,MACrBkE,EAAYU,EAASlN,MACrB0M,GAAYQ,EAAShF,MACrB0E,GAAiBM,EAASC,YAC1BL,GAAaI,EAASE,OACtBJ,GAAaE,EAASG,OAEtBrD,GAAWlI,EAAI,SAEf3B,IAAW,GApBC,4CAAH,qDA4BXmN,GAAY,uCAAG,WAAOtM,GAAP,eAAAC,EAAA,6DACjBD,EAAEE,iBAEFf,IAAW,GANoB4F,SAASwH,eAAe,gBAAgB7L,MAAQ,GASzEkH,EAAWjJ,KAAK4B,UAAU,CAAC,OAAUyJ,KAN1B,SAQM/C,EAAIJ,KAAJ,UAAYjH,EAAZ,0BAAqCmL,EAArC,KAAgDnD,EAAU,CAC7EvH,QAAQ,CACJ,eAAgB,sBAVP,OAaM,MAbN,OAaLU,SACRyG,KACAjI,EAAa,WACbE,EAAY,kBAEhByB,IACArB,EAAS,aAAD,OAAc4L,KAnBL,4CAAH,sDAuBZe,GAAU,uCAAG,4BAAAvM,EAAA,6DAEfd,IAAW,GAFI,SAIQ8H,EAAIJ,KAAJ,UAAYjH,EAAZ,wBAAmCmL,EAAnC,KAA6C,CAChE1K,QAAQ,CACJ,eAAgB,sBANT,OASQ,OALjBO,EAJS,QASHG,QACRyG,KACAjI,EAAa,WACbE,EAAY,mCAEY,MAApBmB,EAASG,SACbyG,KACAjI,EAAa,QACbE,EAAY,2CAEhByB,IAnBe,2CAAH,qDAuBVuL,GAAY,uCAAG,4BAAAxM,EAAA,6DAEjBd,IAAW,GAFM,SAIM8H,EAAIJ,KAAJ,UAAYjH,EAAZ,0BAAqCmL,EAArC,KAA+C,CAClE1K,QAAQ,CACJ,eAAgB,sBANP,OASM,OALjBO,EAJW,QASLG,QACRyG,KACAjI,EAAa,WACbE,EAAY,qCAEY,MAApBmB,EAASG,SACbyG,KACAjI,EAAa,QACbE,EAAY,6CAEhByB,IAnBiB,2CAAH,qDAuBZwL,GAAS,uCAAE,WAAOC,GAAP,eAAA1M,EAAA,6DAEbd,IAAW,GAFE,SAIU8H,EAAIJ,KAAJ,UAAYjH,EAAZ,uBAAkC+M,EAAlC,KAA2C,CAC9DvM,OAAQ,OACRC,QAAQ,CACJ,eAAgB,sBAPX,OAUU,OANjBO,EAJO,QAUDG,QACRyG,KACAjI,EAAa,WACbE,EAAY,iCAEY,MAApBmB,EAASG,SACbyG,KACAjI,EAAa,QACbE,EAAY,yCAEhByB,IApBa,2CAAF,sDAuBT0L,GAAW,uCAAG,WAAOD,GAAP,eAAA1M,EAAA,6DAEhBd,IAAW,GAFK,SAIO8H,EAAIJ,KAAJ,UAAYjH,EAAZ,yBAAoC+M,EAApC,KAA6C,CAChEtM,QAAQ,CACJ,eAAgB,sBANR,OASO,OALjBO,EAJU,QASJG,QACRyG,KACAjI,EAAa,WACbE,EAAY,mCAEY,MAApBmB,EAASG,SACbyG,KACAjI,EAAa,QACbE,EAAY,2CAEhByB,IAnBgB,2CAAH,sDA6BjB,OANAc,qBAAU,WACNwF,OAED,IAKC,cAACtC,EAAA,EAAD,CAAW/C,UAAU,qBAArB,SAEMjD,GACE,cAAC,EAAD,IAEA,eAAC,IAAMsF,SAAP,WAEEpF,EAEE,cAAC+F,EAAA,EAAD,CAAO1B,QAASnE,EAAW6C,UAAU,cAAciD,QAAS,kBAAM/F,GAAQ,IAAQgG,aAAW,EAA7F,SAA+F7F,IAE/F,KAKJ,6BAAKyL,IACL,oBAAG9I,UAAU,YAAb,oBAAiCZ,EAAesK,IAAhD,YACA,uBAEA,eAACjC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKgD,GAAI,EAAGC,GAAI,EAAhB,SACI,qBAAK3K,UAAU,kBAAf,SACI,gCACI,qBAAKwB,QAAS6I,GAAd,SAA0B,cAAC,EAAD,MAC1B,qBAAKrK,UAAU,kBAAf,SAAkC4J,KAClC,qBAAKpI,QAAS8I,GAAd,SAA4B,cAAC,EAAD,aAKxC,cAAC5C,EAAA,EAAD,CAAKgD,GAAI,GAAIC,GAAI,GAAjB,SACI,qBAAK3K,UAAU,gBAAf,SAAgCgJ,SAKxC,uBAIA,cAACvB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAK1H,UAAU,WAAf,SACMkJ,EAAS0B,MAAM,OAAOjD,KAAI,SAACkD,EAAKC,GAAN,OACxB,wBAAoB9K,UAAU,mDAA9B,SAAkF6K,GAArEC,YAK7B,cAACrD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAK1H,UAAU,WAAf,SACI,cAAC,EAAD,CAAanD,KAAMuM,EAAUV,KAAMc,WAI/C,uBAIA,qBAAIxJ,UAAU,MAAd,UAAqB4G,GAAQlH,OAA2B,IAAnBkH,GAAQlH,OAAe,UAAY,cAEtEkH,GAAQe,KAAI,SAAAoD,GAAG,OACb,sBAAkB/K,UAAU,OAA5B,UACI,eAACyH,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,qBAAK3K,UAAU,kBAAf,SACI,gCACI,qBAAKwB,QAAS,kBAAM+I,GAAUQ,EAAI5I,KAAlC,SAAuC,cAAC,EAAD,MACvC,qBAAKnC,UAAU,kBAAf,SAAkC+K,EAAIb,QACtC,qBAAK1I,QAAS,kBAAMiJ,GAAYM,EAAI5I,KAApC,SAAyC,cAAC,EAAD,aAIrD,cAACuF,EAAA,EAAD,CAAKiD,GAAI,GAAT,SACI,qBAAK3K,UAAU,gBAAf,SAAgC+K,EAAIlD,cAG5C,cAACJ,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAK1H,UAAU,WAAf,SACI,cAAC,EAAD,CAAanD,KAAMkO,EAAIlO,KAAM6L,KAAMqC,EAAIf,qBAlB7Ce,EAAI5I,OA4BlB,eAACzB,EAAA,EAAD,CAAM6C,SAAU4G,GAAhB,UACI,cAACzJ,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAAcsB,GAAG,eAAerB,SAAU,SAAAjD,GAAC,OAAIiM,GAAUjM,EAAEQ,OAAOE,QAAQ0C,YAAY,cAAc4E,GAAG,WAAWC,KAAM,EAAGrC,UAAQ,MAEvI,qBAAKzD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,kBAAkBoC,KAAK,KAArD,0CCtJTsH,G,OAvIQ,WAEnB,MAIoB5J,qBAAWnF,GAJvBmD,EAAR,EAAQA,eACAhC,EADR,EACQA,aACAE,EAFR,EAEQA,YACAyB,EAHR,EAGQA,iBACAtB,EAJR,EAIQA,QAEAwN,EAAOjG,cAAPiG,GAEFnG,EAAMjB,IAENnG,EAAWC,cAEjB,EAAkCtB,mBAAS,IAA3C,mBAAOyM,EAAP,KAAkBC,EAAlB,KACA,EAAgC1M,mBAAS,IAAzC,mBAAO2M,EAAP,KAAiBC,EAAjB,KACA,EAAgC5M,mBAAS,IAAzC,mBAAO6M,EAAP,KAAiBC,EAAjB,KACA,EAA+B9M,mBAAS,IAAxC,mBAAO+M,EAAP,KAAgBC,EAAhB,KACA,EAAgChN,mBAAS,IAAzC,mBAAOiN,EAAP,KAAiBC,EAAjB,KACA,EAA0ClN,mBAAS,IAAnD,mBAAOmN,EAAP,KAAsBC,EAAtB,KACA,EAAkCpN,mBAAS,GAA3C,mBAAOqN,EAAP,KAAkBC,EAAlB,KAEA,EAA4BtN,mBAAS,IAArC,oBAAOwL,GAAP,MAAeiC,GAAf,MAEA,GAA8BzN,oBAAS,GAAvC,qBAAOU,GAAP,MAAgBC,GAAhB,MAEA4F,SAASC,MAAQiG,EAEjB,IAAMoC,GAAS,uCAAG,gCAAApN,EAAA,sEACSgH,EAAIQ,IAAJ,UAAW7H,EAAX,mBAA6BwN,IADtC,cACRxM,EADQ,gBAEKA,EAAQ,KAFb,OAERE,EAFQ,OAGRoL,EAAWpL,EAAI,SACrBoK,EAAagB,EAASlH,OACtBoG,EAAYc,EAAS5L,MACrBgL,EAAYY,EAAS5E,MACrBkE,EAAYU,EAASlN,MACrB0M,EAAYQ,EAAShF,MACrB0E,EAAiBM,EAASC,YAC1BL,EAAaI,EAASE,OAEtBH,GAAUnL,EAAI,OAAWkJ,QAEzB7K,IAAW,GAdG,4CAAH,qDAkBTmO,GAAY,uCAAG,WAAOtN,GAAP,eAAAC,EAAA,6DACjBD,EAAEE,iBACI0H,EAAWjJ,KAAK4B,UAAU,CAAC,OAAUyJ,KAF1B,SAGM/C,EAAIc,IAAJ,UAAWnI,EAAX,mBAA6BwN,EAA7B,KAAoCxF,EAAU,CACjEvH,QAAQ,CACJ,eAAgB,sBALP,OAQM,MARN,OAQLU,SACRxB,EAAa,WACbE,EAAY,kBACZyB,KAEJrB,EAAS,aAAD,OAAc4L,IAbL,2CAAH,sDAuBlB,OALAzJ,qBAAU,WACNqL,OAED,IAGC,cAACnI,EAAA,EAAD,CAAW/C,UAAU,sBAArB,SAEMjD,GACE,cAAC,EAAD,IAEJ,eAAC,IAAMsF,SAAP,WAGI,eAAC,IAAMA,SAAP,WAEA,6BAAKyG,IACL,oBAAG9I,UAAU,YAAb,oBAAiCZ,EAAesK,GAAhD,YACA,uBACA,cAACjC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAK1H,UAAU,gBAAf,SAAgCgJ,QAIxC,uBAIA,cAACvB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAK1H,UAAU,WAAf,SACMkJ,EAAS0B,MAAM,OAAOjD,KAAI,SAACkD,EAAKC,GAAN,OACxB,wBAAoB9K,UAAU,mDAA9B,SAAkF6K,GAArEC,YAK7B,cAACrD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAK1H,UAAU,mBAAf,SACI,cAAC,EAAD,CAAanD,KAAMuM,EAAUV,KAAMc,UAI/C,0BAMJ,eAAC9I,EAAA,EAAD,CAAM6C,SAAU4H,GAAhB,UAII,cAACzK,EAAA,EAAKE,MAAN,CAAYZ,UAAU,OAAtB,SACI,cAACU,EAAA,EAAKG,QAAN,CAActC,MAAOsJ,GAAQ/G,SAAU,SAAAjD,GAAC,OAAIiM,GAAUjM,EAAEQ,OAAOE,QAAQ0C,YAAY,cAAc4E,GAAG,WAAWC,KAAM,EAAGrC,UAAQ,MAKpI,qBAAKzD,UAAU,eAAf,SACI,cAACqB,EAAA,EAAD,CAAQC,QAAQ,kBAAkBN,KAAK,SAAS0C,KAAK,KAArD,uCpBxIhB0H,EAAY,CAAC,QAAS,WAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUlN,GAAU,IAAK,IAAImN,EAAI,EAAGA,EAAIC,UAAU/L,OAAQ8L,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQtN,EAAOsN,GAAOD,EAAOC,IAAY,OAAOtN,GAAkBgN,EAASU,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnEnN,EAEzF,SAAuCqN,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DnN,EAAS,GAAQ8N,EAAab,OAAOc,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWzM,OAAQ8L,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAatN,EAAOsN,GAAOD,EAAOC,IAAQ,OAAOtN,EAFxMiO,CAA8BZ,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiB9M,OAAQ8L,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBtN,EAAOsN,GAAOD,EAAOC,IAAU,OAAOtN,EAMne,SAASqO,GAAmBC,EAAMC,GAChC,IAAI/J,EAAQ8J,EAAK9J,MACbgK,EAAUF,EAAKE,QACfpE,EAAQwD,EAAyBU,EAAMvB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtDyB,iBAAkB,gBAClB3M,OAAQ,OACRD,MAAO,MACPiC,GAAI,UACJ/B,QAAS,YACT2M,SAAU,WACVC,MAAO,6BACPC,WAAY,+BACZC,IAAKN,EACL,kBAAmBC,GAClBpE,GAAQ5F,EAAqB,gBAAoB,QAAS,CAC3DV,GAAI0K,GACHhK,GAAS,KAAM7G,IAAOA,EAAkB,gBAAoB,IAAK,CAClEmG,GAAI,aACU,gBAAoB,OAAQ,CAC1C9B,EAAG,0mBACHC,KAAM,YACS,gBAAoB,OAAQ,CAC3CD,EAAG,qJACHC,KAAM,eAIV,IqBzCI,GrByCA6M,GAA0B,aAAiBT,IsBwEhCU,ItBvEA,I,MsBxBU,WAErB,MACoBhM,qBAAWnF,GADvBmD,EAAR,EAAQA,eACA3B,EADR,EACQA,QAEA4P,EAAWrI,cAAXqI,OAEFvI,EAAMjB,IAEZ,EAAkDxH,mBAAS,IAA3D,mBAAOiR,EAAP,KAA0BC,EAA1B,KACA,EAAsClR,oBAAS,GAA/C,mBAAOmR,EAAP,KAAoBC,EAApB,KAEA,EAA8BpR,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAEA4F,SAASC,MAAQ,sEAEjB,IAAM6K,EAAe,uCAAG,8BAAA5P,EAAA,sEACGgH,EAAIQ,IAAJ,UAAW7H,EAAX,0BAAoC4P,IADvC,UAEW,OADzB5O,EADc,QAET,KAASG,OAFA,gBAGhB6O,GAAe,GAHC,0BAKS,MAApBhP,EAASG,OALE,kCAMGH,EAAQ,KANX,QAMVE,EANU,OAOhB4O,EAAqB5O,GAPL,QAUpB3B,GAAW,GAVS,4CAAH,qDAkBrB,OALA6C,qBAAU,WACN6N,MAED,IAGC,cAAC3K,EAAA,EAAD,UACMhG,EACF,cAAC,EAAD,IAEJ,eAAC,IAAMsF,SAAP,WACI,uBAIGmL,EAWH,cAAC,IAAMnL,SAAP,UAIEiL,EAAkB3F,KAAI,SAAAC,GAAQ,OAE5B,eAACH,EAAA,EAAD,CAAKvG,MAAO,CAACyM,UAAW,MAAxB,UACI,cAACjG,EAAA,EAAD,UACI,sBAAK1H,UAAU,kCAAf,UACI,sBAAKkB,MAAO,CAAC0M,MAAOhG,EAASsC,MAAQ,EAAI,UAAWtC,EAASsC,MAAQ,EAAI,UAAW,UAAW2D,KAAM,OAArG,UAA8GjG,EAASsC,MAAM,uBAA7H,WACA,sBAAKhJ,MAAO,CAAC0M,MAAOhG,EAASkG,UAAY,EAAI,UAAW,UAAWD,KAAM,OAAzE,UAAkFjG,EAASkG,UAAU,uBAArG,aACA,sBAAK5M,MAAO,CAAC0M,MAAOhG,EAASqC,MAAQ,IAAM,UAAW,UAAW4D,KAAM,OAAvE,UAAgFzO,EAAewI,EAASqC,OAAO,uBAA/G,gBAGR,eAACvC,EAAA,EAAD,CAAKqG,GAAI,EAAT,UAEI,6BAAI,cAAC,IAAD,CAAM7M,MAAO,CAACyC,eAAgB,QAAS1D,GAAE,oBAAe2H,EAAS7C,MAAjE,SAA0E6C,EAAS/E,UAIvF,qBAAK7C,UAAU,WAAf,SACM4H,EAASzC,KAAKyF,MAAM,OAAOjD,KAAI,SAACkD,EAAKC,GAAN,OAC7B,wBAAoB9K,UAAU,mDAA9B,SAAkF6K,GAArEC,QAGrB,qBAAK9K,UAAU,WAAf,SACI,cAAC,EAAD,CAAanD,KAAM+K,EAAS/K,KAAM6L,KAAMd,EAASoC,kBAGzD,yBAvBgCpC,EAASzF,SAfjD,sBAAKnC,UAAU,cAAf,UACI,8BAAK,cAAC,GAAD,MACL,uBACA,uBACA,gEAAkC,iCAASqN,OAC3C,yEACA,6CAAe,cAAC,IAAD,CAAMnM,MAAO,CAACyC,eAAgB,QAAS1D,GAAG,aAA1C,oCC1DhB+N,GAPM,SAAC,GAAgB,IAAf5R,EAAc,EAAdA,SAInB,OAFegF,qBAAWnF,GAAnBY,KAEOT,EAAW,cAAC,IAAD,CAAU6D,GAAG,YCqI3BgO,GA/HO,WAElB,MAMyB7M,qBAAWnF,GAN5BmD,EAAR,EAAQA,eACAnC,EADR,EACQA,KACAE,EAFR,EAEQA,UACAE,EAHR,EAGQA,SACAH,EAJR,EAIQA,QACAO,EALR,EAKQA,QACA+B,EANR,EAMQA,aAEFsF,EAAMjB,IAEZ,EAAkCxH,mBAAS,IAA3C,mBAAOqK,EAAP,KAAkBC,EAAlB,KACA,EAA0CtK,mBAAS,IAAnD,mBAAO6R,EAAP,KAAsBC,EAAtB,KAEA,EAA8B9R,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAGA4F,SAASC,MAAQ,sEAEjB,IAAMuL,EAAY,uCAAG,kCAAAtQ,EAAA,6DAEjBd,GAAW,GAFM,SAIM8H,EAAIQ,IAAJ,UAAW7H,EAAX,eAJN,OAIXgB,EAJW,OAKXE,EAAOF,EAAQ,KACfiI,EAAY/H,EAAI,UAChB0P,EAAS1P,EAAI,eACnBgI,EAAaD,GACbyH,EAAiBE,GAEjBrR,GAAW,GAXM,4CAAH,qDAeZsR,EAAe,uCAAG,kCAAAxQ,EAAA,6DAEpBd,GAAW,GAFS,SAIG8H,EAAIQ,IAAJ,UAAW7H,EAAX,uBAJH,cAIdgB,EAJc,gBAKDA,EAAQ,KALP,cAKdE,EALc,gBAMIA,EAAI,UANR,cAMd+H,EANc,iBAOC/H,EAAI,eAPL,QAOd0P,EAPc,OAQpB1H,EAAaD,GACbyH,EAAiBE,GAEjBrR,GAAW,GAXS,4CAAH,qDAqBrB,OANA6C,qBAAU,WACNuO,MAED,IAKC,eAACrL,EAAA,EAAD,CAAW/C,UAAU,YAArB,UAEM/C,EACE,cAAC+F,EAAA,EAAD,CAAO1B,QAASnE,EAAW6C,UAAU,cAAciD,QAAS,kBAAM/F,GAAQ,IAAQgG,aAAW,EAA7F,SAA+F7F,IAE/F,KAGJ,sBAAK2C,UAAU,YAAf,UACI,2CACA,cAAC,IAAD,CAAMC,GAAG,OAAT,SAAgB,cAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAhB,sBAEpB,cAACM,EAAA,EAAD,CAAQ5B,UAAU,mCAAlB,SACI,cAACoC,EAAA,EAAD,CAAKpC,UAAU,gBAAf,SACI,eAAC,IAAMqC,SAAP,WACI,cAACD,EAAA,EAAIE,KAAL,CAAUd,QAAS8M,EAAiBtO,UAAS,oBAAiC,WAAlBkO,EAA4B,SAAU,MAAlG,SAA0G,cAAC,IAAD,CAAMlO,UAAU,YAAYC,GAAG,YAA/B,sBAC1G,cAACmC,EAAA,EAAIE,KAAL,CAAUd,QAAS4M,EAAcpO,UAAS,oBAAiC,WAAlBkO,EAA4B,SAAU,MAA/F,SAAuG,cAAC,IAAD,CAAMlO,UAAU,YAAYC,GAAG,gBAA/B,kCAInH,uBAEElD,EACE,cAAC,EAAD,IAEA,cAAC,IAAMsF,SAAP,UAIEqE,EAAUiB,KAAI,SAAAC,GAAQ,OACpB,eAAC,IAAMvF,SAAP,WACA,eAACoF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,sBAAK3K,UAAU,kCAAf,UACI,sBAAKkB,MAAO,CAAC0M,MAAOhG,EAASsC,MAAQ,EAAI,UAAWtC,EAASsC,MAAQ,EAAI,UAAW,UAAW2D,KAAM,OAArG,UAA8GjG,EAASsC,MAAM,uBAA7H,WACA,sBAAKhJ,MAAO,CAAC0M,MAAOhG,EAASkG,UAAY,EAAI,UAAW,UAAWD,KAAM,OAAzE,UAAkFjG,EAASkG,UAAU,uBAArG,aACA,sBAAK5M,MAAO,CAAC0M,MAAOhG,EAASqC,MAAQ,IAAM,UAAW,UAAW4D,KAAM,OAAvE,UAAgFzO,EAAewI,EAASqC,OAAO,uBAA/G,gBAGR,eAACvC,EAAA,EAAD,CAAKiD,GAAI,EAAT,UAII,6BAAI,cAAC,IAAD,CAAMzJ,MAAO,CAACyC,eAAgB,QAAS1D,GAAE,oBAAe2H,EAAS7C,MAAjE,SAA0EvF,EAAaoI,EAAS/E,WAIpG,qBAAK7C,UAAU,WAAf,SACM4H,EAASzC,KAAKyF,MAAM,OAAOjD,KAAI,SAACkD,EAAKC,GAAN,OAC7B,wBAAoB9K,UAAU,mDAA9B,SAAkF6K,GAArEC,QAIrB,qBAAK9K,UAAU,WAAf,SACI,cAAC,EAAD,CAAanD,KAAM+K,EAAS/K,KAAM6L,KAAMd,EAASoC,qBAK7D,yBA7BqBpC,EAASzF,aHrG9C,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAWmJ,OAAOC,QAAU,SAAUlN,GAAU,IAAK,IAAImN,EAAI,EAAGA,EAAIC,UAAU/L,OAAQ8L,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQtN,EAAOsN,GAAOD,EAAOC,IAAY,OAAOtN,GAAkB,GAAS0N,MAAMC,KAAMP,WAEhT,SAAS,GAAyBC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnEnN,EAEzF,SAAuCqN,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DnN,EAAS,GAAQ8N,EAAab,OAAOc,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWzM,OAAQ8L,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAatN,EAAOsN,GAAOD,EAAOC,IAAQ,OAAOtN,EAFxM,CAA8BqN,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiB9M,OAAQ8L,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBtN,EAAOsN,GAAOD,EAAOC,IAAU,OAAOtN,EAMne,SAASkQ,GAAY5B,EAAMC,GACzB,IAAI/J,EAAQ8J,EAAK9J,MACbgK,EAAUF,EAAKE,QACfpE,EAAQ,GAAyBkE,EAAM,IAE3C,OAAoB,gBAAoB,MAAO,GAAS,CACtDG,iBAAkB,gBAClB5M,MAAO,MACPC,OAAQ,MACRgC,GAAI,UACJ/B,QAAS,YACT2M,SAAU,WACVC,MAAO,6BACPC,WAAY,+BACZC,IAAKN,EACL,kBAAmBC,GAClBpE,GAAQ5F,EAAqB,gBAAoB,QAAS,CAC3DV,GAAI0K,GACHhK,GAAS,KAAM,KAAO,GAAkB,gBAAoB,IAAK,CAClEV,GAAI,+CACU,gBAAoB,IAAK,KAAmB,gBAAoB,IAAK,KAAmB,gBAAoB,IAAK,KAAmB,gBAAoB,SAAU,CAChLqM,GAAI,IACJC,GAAI,IACJnO,KAAM,UACNoO,EAAG,KACY,gBAAoB,SAAU,CAC7CF,GAAI,IACJC,GAAI,IACJnO,KAAM,UACNoO,EAAG,KACY,gBAAoB,SAAU,CAC7CF,GAAI,IACJC,GAAI,IACJnO,KAAM,UACNoO,EAAG,KACY,gBAAoB,OAAQ,CAC3CrO,EAAG,+FACHC,KAAM,YACS,gBAAoB,OAAQ,CAC3CD,EAAG,kQACHC,KAAM,eACY,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CAC1FD,EAAG,0SACHC,KAAM,YACS,gBAAoB,OAAQ,CAC3CD,EAAG,mSACHC,KAAM,YACS,gBAAoB,OAAQ,CAC3CD,EAAG,wQACHC,KAAM,gBAIV,IAAI,GAA0B,aAAiBiO,II7ChCI,IJ8CA,II7DM,WAIjB,OAFA/L,SAASC,MAAQ,iBAGb,eAACE,EAAA,EAAD,CAAW/C,UAAU,cAArB,UACI,8BAAK,cAAC,GAAD,MACL,gDACA,uFACA,6CAAe,cAAC,IAAD,CAAMkB,MAAO,CAACyC,eAAgB,QAAS1D,GAAG,aAA1C,0BACf,+BAAI,cAAC,IAAD,CAAMiB,MAAO,CAACyC,eAAgB,QAAS1D,GAAG,OAA1C,iBAAJ,sBCSG,SAAS2O,KAEtB,OACI,qBAAK5O,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WAIE,cAAC,IAAD,CAAO6O,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAI9B,cAAC,IAAD,UACK,CAAC,IAAK,cAAcnH,KAAI,SAACkH,EAAM/D,GAAP,OACrB,cAAC,IAAD,CAAO+D,KAAMA,EAAMC,QAAS,cAAC,GAAD,UAAc,cAAC,GAAD,OAAuChE,QAGzF,cAAC,IAAD,CAAO+D,KAAK,qBAAqBC,QAAS,cAAC,GAAD,UAAc,cAAC,GAAD,QACxD,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,GAAD,UAAc,cAAC,EAAD,QAC1C,cAAC,IAAD,CAAOD,KAAK,yBAAyBC,QAAS,cAAC,GAAD,UAAc,cAAC,EAAD,QAC5D,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,GAAD,UAAc,cAAC,EAAD,QACxD,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,UAAc,cAAC,EAAD,QACnD,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,UAAc,cAAC,EAAD,QACrD,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,GAAD,UAAc,cAAC,EAAD,QACtD,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,UAAc,cAAC,GAAD,kBC/CrDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFrM,SAASwH,eAAe,U","file":"static/js/main.7da78478.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMagnifyingGlass(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 32 32\",\n    height: \"7.5%\",\n    width: \"15%\",\n    id: \"Layer_1\",\n    viewBox: \"0 0 32 32\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"search_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20,0.005c-6.627,0-12,5.373-12,12c0,2.026,0.507,3.933,1.395,5.608l-8.344,8.342l0.007,0.006   C0.406,26.602,0,27.49,0,28.477c0,1.949,1.58,3.529,3.529,3.529c0.985,0,1.874-0.406,2.515-1.059l-0.002-0.002l8.341-8.34   c1.676,0.891,3.586,1.4,5.617,1.4c6.627,0,12-5.373,12-12C32,5.378,26.627,0.005,20,0.005z M4.795,29.697   c-0.322,0.334-0.768,0.543-1.266,0.543c-0.975,0-1.765-0.789-1.765-1.764c0-0.498,0.21-0.943,0.543-1.266l-0.009-0.008l8.066-8.066   c0.705,0.951,1.545,1.791,2.494,2.498L4.795,29.697z M20,22.006c-5.522,0-10-4.479-10-10c0-5.522,4.478-10,10-10   c5.521,0,10,4.478,10,10C30,17.527,25.521,22.006,20,22.006z\",\n    fill: \"#333333\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20,5.005c-3.867,0-7,3.134-7,7c0,0.276,0.224,0.5,0.5,0.5s0.5-0.224,0.5-0.5c0-3.313,2.686-6,6-6   c0.275,0,0.5-0.224,0.5-0.5S20.275,5.005,20,5.005z\",\n    fill: \"#333333\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMagnifyingGlass);\nexport default __webpack_public_path__ + \"static/media/MagnifyingGlass.827eaf72.svg\";\nexport { ForwardRef as ReactComponent };","import { createContext, useState, useEffect } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from 'react-router-dom'\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\nexport const AuthProvider = ({children}) => {\n    const [authTokens, setAuthTokens] = useState(()=> localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\n    const [user, setUser] = useState(()=> localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null)\n    const [loading, setLoading] = useState(true)\n\n    const [show, setShow] = useState(false)\n    const [alertType, setAlertType] = useState('')\n    const[alertMsg, setAlertMsg] = useState('')\n\n    const [spinnerLoading, setSpinnerLoading] = useState(true)\n\n    // const baseUrl = 'http://127.0.0.1:8000'\n\n    const baseUrl = 'https://abdulla5.pythonanywhere.com'\n\n    const navigate = useNavigate()\n\n    const loginUser = async e => {\n        e.preventDefault()\n        const response = await fetch(`${baseUrl}/api/token/`, {\n            method:'POST',\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({'username':e.target.username.value, 'password':e.target.password.value})\n        })\n        const data = await response.json()\n\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.access))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n            setAlertType('success')\n            setAlertMsg(`Welcome ${jwt_decode(data.access).username}`)\n            handleVisibility()\n            navigate('/questions')\n        }\n        else{\n            setAlertType('danger')\n            setAlertMsg('Wrong credentials')\n            handleVisibility()\n        }\n    }\n\n\n    const logoutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        setAlertType('info')\n        setAlertMsg('You have been logged out')\n        handleVisibility()\n        navigate('/login')\n    }\n\n    const handleVisibility = () => {\n        setShow(true)\n        setTimeout(() => {\n            setShow(false)\n        }, 2000);\n    }\n\n\n    const viewsFormatter = num => {\n        if (num >= 1000000) {\n           return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n        }\n        if (num >= 1000) {\n           return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n        }\n        return num;\n   }\n\n\n   const strFormatter = str => {\n        if(str.length >= 175){\n            let newStr = str.substring(0, 176)\n            return `${newStr}...`\n        }\n        else{\n            return str\n        }\n    }\n\n\n    const contextData = {\n        user: user,\n        setUser: setUser,\n        authTokens: authTokens,\n        setAuthTokens: setAuthTokens,\n        loginUser: loginUser,\n        logoutUser: logoutUser,\n        show: show,\n        setShow: setShow,\n        alertType: alertType,\n        setAlertType: setAlertType,\n        alertMsg: alertMsg,\n        setAlertMsg: setAlertMsg,\n        handleVisibility: handleVisibility,\n        viewsFormatter: viewsFormatter,\n        baseUrl: baseUrl,\n        strFormatter: strFormatter,\n        spinnerLoading: spinnerLoading,\n        setSpinnerLoading: setSpinnerLoading\n    }\n\n\n    useEffect(()=> {\n\n        if(authTokens){\n            setUser(jwt_decode(authTokens.access))\n        }\n\n        setLoading(false)\n\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData}>\n            {loading ? null : children}\n        </AuthContext.Provider>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst StackoverflowLogo = () => {\n    return (\n        <Link className='logo' to='/questions'>\n            <svg aria-hidden=\"true\" className=\"native svg-icon iconLogoGlyphMd\" width=\"32\" height=\"37\" viewBox=\"0 0 32 37\"><path d=\"M26 33v-9h4v13H0V24h4v9h22Z\" fill=\"#BCBBBB\"></path><path d=\"m21.5 0-2.7 2 9.9 13.3 2.7-2L21.5 0ZM26 18.4 13.3 7.8l2.1-2.5 12.7 10.6-2.1 2.5ZM9.1 15.2l15 7 1.4-3-15-7-1.4 3Zm14 10.79.68-2.95-16.1-3.35L7 23l16.1 2.99ZM23 30H7v-3h16v3Z\" fill=\"#F48024\"></path></svg>\n            <span className=\"-img _glyph\"> stack <b>overflow</b></span>\n        </Link>\n    )\n}\n\nexport default StackoverflowLogo\n","import React, { useState } from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst SearchForm = () => {\n\n    const [searchQues, setSearchQues] = useState('')\n\n    return (\n\n        <Form action={`/questions/${searchQues}`} className=\"d-flex\">\n            <Form.Group>\n                <Form.Control\n                    onChange={e => setSearchQues(e.target.value)}\n                    autoComplete=\"off\" \n                    type=\"search\" \n                    placeholder=\"Search Question\" \n                    aria-label=\"Search\"  \n                    className='mb-3 mt-1 me-2'\n                    style={{width: \"800px\"}}\n                />\n            </Form.Group>\n        </Form>\n\n    )\n}\n\nexport default SearchForm\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\nimport { Button } from 'react-bootstrap'\n\nconst UserButton = () => {\n\n    const { user } = useContext(AuthContext)\n\n    return (\n        <Link className=\"nav-link\" to={`/profile/${user['username']}`}><Button variant='success'>{user['username']}</Button></Link>\n    )\n}\n\nexport default UserButton\n","import React, {useContext} from 'react'\nimport { Link, } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\nimport { Button } from 'react-bootstrap'\n\nconst LogoutButton = () => {\n\n    const { logoutUser } = useContext(AuthContext)\n\n    return (\n        <Link className=\"nav-link\" to=\"/login\"><Button onClick={logoutUser} variant='outline-primary'>Log out</Button></Link>\n    )\n}\n\nexport default LogoutButton\n","import React from 'react'\nimport { Link, } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nconst SignupButton = () => {\n    return (\n        <Link className=\"nav-link\" to=\"/signup\"><Button variant='success'>Sign up</Button></Link>\n    )\n}\n\nexport default SignupButton\n","import React from 'react'\nimport { Link, } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\n\nconst LoginButton = () => {\n    return (\n        <Link className=\"nav-link\" to=\"/login\"><Button variant='primary'>Log In</Button></Link>\n    )\n}\n\nexport default LoginButton\n","import React, {useContext,} from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\n\nimport AuthContext from '../context/AuthContext'\n\nimport StackoverflowLogo  from './StackoverflowLogo'\nimport SearchForm  from './SearchForm'\nimport UserButton from './UserButton'\nimport LogoutButton from './LogoutButton'\nimport SignupButton from './SignupButton'\nimport LoginButton from './LoginButton'\n\nimport '../App.css'\n\n\nconst Header = () => {\n\n    const { user } = useContext(AuthContext)\n\n    return (\n        <Navbar sticky=\"top\" bg='light' expand=\"lg\">\n            <Navbar.Brand><StackoverflowLogo/></Navbar.Brand>        \n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\n            <Navbar.Collapse className='justify-content-end' id=\"navbarScroll\">  \n                <Nav>         \n                { user ?\n                    <React.Fragment>\n                        <div className='header-box'>\n                            <SearchForm/>\n                            <Nav.Item><UserButton/></Nav.Item>\n                            <Nav.Item><LogoutButton/></Nav.Item>\n                        </div>                    \n                    </React.Fragment>\n                    :\n                    <React.Fragment>\n                        <Nav.Item><SignupButton/></Nav.Item>\n                        <Nav.Item><LoginButton/></Nav.Item>\n                    </React.Fragment>\n                }\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header","import {React, useState, useContext} from 'react'\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap'\nimport { useNavigate, Link } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\n\nimport '../App.css'\n\nconst SignupPage = () => {\n\n    const { user, \n            loginUser, \n            alertMsg, \n            alertType, \n            setAlertMsg, \n            setAlertType, \n            show, \n            setShow, \n            handleVisibility, \n            baseUrl } = useContext(AuthContext)\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    const navigate = useNavigate()\n\n    if(user){\n        navigate('/questions')\n    }\n\n    document.title = 'Sign up'\n\n    const signUp = async (e) => {\n        e.preventDefault()\n        const response = await fetch(`${baseUrl}/register/`,{\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                \"username\": username,\n                \"password\": password,\n                \"confirmPassword\": confirmPassword\n            }),\n        })\n\n        if(response.status === 400){\n            const data = await response.json()\n            setAlertType('danger')\n            if (data['username']){\n                setAlertMsg(data['username'][0])\n            }else if(data['non_field_errors']){\n                setAlertMsg(data['non_field_errors'][0])\n            }\n            handleVisibility()\n        }else{\n            loginUser(e)\n        }\n\n    }\n\n    \n    return (\n        <Container>\n            { show ?\n\n                <Alert variant={alertType} className='text-center' onClose={() => setShow(false)} dismissible>{alertMsg}</Alert>\n                : \n                null\n            }\n            <Card>\n                <Card.Body>\n                    <Card.Title className='text-center'><h4>Sign up</h4></Card.Title>\n                    <br/>\n                    <Card.Text>\n                        <Form onSubmit={signUp}>\n                            <Form.Group className=\"mb-4\">\n                                <Form.Control name='username' onChange={e => setUsername(e.target.value)} type=\"text\" placeholder=\"Username\" required />\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\">\n                                <Form.Control name='password' onChange={e => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" required />\n                            </Form.Group>\n                            <Form.Group className=\"mb-4\">\n                                <Form.Control name='confirmPassword' onChange={e => setConfirmPassword(e.target.value)} type=\"password\" placeholder=\"Confirm Password\" required />\n                            </Form.Group>\n                            <div className=\"d-grid gap-2\">\n                                <Button variant=\"outline-primary\" type=\"submit\" size=\"lg\">Sign up</Button>\n                            </div>\n                        </Form>\n                    </Card.Text>\n                    <div className='text-center'>Already have an account? <Link style={{textDecoration: \"none\"}} to=\"/login\">Log in</Link></div>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default SignupPage","import React, {useContext} from 'react'\nimport { Card, Form, Button, Alert, Container } from 'react-bootstrap'\nimport AuthContext from '../context/AuthContext'\nimport { useNavigate, Link } from 'react-router-dom'\n\nimport '../App.css'\n\nconst LoginPage = () => {\n    \n    const { loginUser, \n            user, \n            show, \n            alertType, \n            alertMsg, \n            setShow } = useContext(AuthContext)\n\n    const navigate = useNavigate()\n\n    document.title = 'Log in'\n\n    if(user){\n        navigate('/questions')\n    }\n\n    const handleClick = (e) => {\n        loginUser(e)\n    }\n\n\n    return (\n        <Container>\n            { show ?\n\n            <Alert variant={alertType} className='text-center' onClose={() => setShow(false)} dismissible>{alertMsg}</Alert>\n            : \n            null\n            }\n      \n            <Card>\n                <Card.Body>\n                    <Card.Title className='text-center'><h4>Log in</h4></Card.Title>\n                    <br/>\n                    <Card.Text>\n\n                    {/* Login Form */}\n\n                    <Form onSubmit={handleClick}>\n\n                    {/* Username Field */}\n\n                        <Form.Group className=\"mb-4\">\n                            <Form.Control name=\"username\" type=\"text\" placeholder=\"Username\" required />\n                        </Form.Group>\n\n                    {/* Password Field */}\n\n                        <Form.Group className=\"mb-4\">\n                            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" required />\n                        </Form.Group>\n\n                    {/* Login Button */}\n\n                        <div className=\"d-grid gap-2\">\n                            <Button type=\"submit\" variant=\"outline-primary\" size=\"lg\">\n                                Log in\n                            </Button>\n                        </div>\n                    </Form>\n                    </Card.Text>\n                    <div className='text-center'>Don't have an account? <Link style={{textDecoration: \"none\"}} to=\"/signup\">Sign up</Link></div>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default LoginPage\n","import axios from 'axios'\nimport jwt_decode from \"jwt-decode\";\nimport dayjs from 'dayjs'\nimport { useContext } from 'react'\nimport AuthContext from '../context/AuthContext'\n\n\nconst useAxios = () => {\n    const {authTokens, setUser, setAuthTokens, baseUrl} = useContext(AuthContext)\n\n    const axiosInstance = axios.create({\n        baseUrl,\n        headers:{\n            Authorization: `Bearer ${authTokens?.access}`\n        }\n    });\n\n    axiosInstance.interceptors.request.use(async req => {\n    \n        const user = jwt_decode(authTokens.access)\n        const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n        if(!isExpired) return req\n    \n        const response = await axios.post(`${baseUrl}/api/token/refresh/`, {\n            refresh: authTokens.refresh\n        });\n    \n        localStorage.setItem('authTokens', JSON.stringify(response.data))\n       \n        setAuthTokens(response.data)\n        setUser(jwt_decode(response.data.access))\n\n        req.headers.Authorization = `Bearer ${response.data.access}`\n        return req\n    })\n    \n    return axiosInstance\n}\n\nexport default useAxios;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport '../App.css'\nimport '../css/loader.css'\n\nconst Loader = () => {\n  return (\n    <Container className='loader-container'>\n      <div className=\"loader\"></div>\n    </Container>\n  )\n};\n\nexport default Loader;\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Card, Button, Form, Container, Alert } from 'react-bootstrap'\nimport { useParams, useNavigate } from 'react-router-dom'\n\nimport AuthContext from '../context/AuthContext'\nimport useAxios from '../utils/useAxios'\n\nimport '../App.css'\nimport '../css/askQuestionPage.css'\n\nimport Loader from '../components/Loader'\n\n\nconst AskQuesPage = () => {\n\n    const { setAlertType, \n            setAlertMsg, \n            show,\n            alertType,\n            setShow,\n            alertMsg,\n            handleVisibility, \n            baseUrl } = useContext(AuthContext)\n\n    const api = useAxios()\n\n    const navigate = useNavigate()\n\n    const {slug} = useParams();\n\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [tags, setTags] = useState('')\n\n    const [loading, setLoading] = useState(false)\n\n\n    document.title = 'Ask a Question'\n\n    useEffect(() => {\n        if(slug){\n            setLoading(true)\n            getQuestion()\n        }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    const getQuestion = async () => {\n        const response = await api.get(`${baseUrl}/question/${slug}/`)\n        const data = await response['data']\n        const questionData = data['question']\n        setTitle(questionData.title)\n        setBody(questionData.body)\n        setTags(questionData.tags)\n\n        setLoading(false)\n    }\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if(slug){\n            updateQuestion()\n        }else{\n            createQuestion()\n        }\n    }\n\n\n    const createQuestion = async () => {\n        const formData = JSON.stringify({'title':title, 'body':body, 'tags':tags})\n        const response = await api.post(`${baseUrl}/question/`, formData, {\n            headers:{\n                'Content-Type': 'application/json',\n            }\n        })\n        if(response['data'].status === 201){\n            const data = await response['data'].data\n            const questionSlug = data.slug\n            setAlertType('success')\n            setAlertMsg('Question posted')\n            handleVisibility()\n            navigate(`/question/${questionSlug}`)\n        }else{\n            setAlertType('danger')\n            setAlertMsg(\"This question can't be posted. Try something different\")\n            handleVisibility()\n        }\n    }\n\n\n    const updateQuestion = async () => {\n        const formData = JSON.stringify({'title':title, 'body':body, 'tags':tags})\n        const response = await api.put(`${baseUrl}/question/${slug}/`, formData, {\n            headers:{\n                'Content-Type': 'application/json',\n            }\n        })\n        if(response.status === 200){\n            const slug = response['data'].slug\n            setAlertType('success')\n            setAlertMsg('Question updated')\n            handleVisibility()\n            navigate(`/question/${slug}`)\n        }\n    }\n\n\n    return (\n        <Container>\n\n            { loading ?\n                <Loader/>\n            :\n            <React.Fragment>\n\n            { show ?\n            \n            <Alert variant={alertType} className='text-center' onClose={() => setShow(false)} dismissible>{alertMsg}</Alert>\n            : \n            null\n            }\n\n            <h3 className='text-center'>Ask a public question</h3>\n\n            {/* Ask Question Form */}\n            <Card>\n                <Form onSubmit={handleSubmit}>\n                    <Card.Body>\n\n                        {/* Title Field */}\n\n                        <Card.Title className='cardTitleText'>Title</Card.Title>\n                        <Card.Text className='cardTitleText'>\n                            Be specific and imagine you’re asking a question to another person.\n                        </Card.Text>\n                        <Form.Group className=\"mb-4\">\n                            <Form.Control type=\"text\" value={title} name=\"title\" onChange={e => setTitle(e.target.value)}  placeholder=\"e.g. is there an R function for finding the index of an element in a vector?\" required />\n                        </Form.Group>\n\n                        {/* Body Field */}\n\n                        <Card.Title className='cardTitleText'>Body</Card.Title>\n                        <Card.Text className='cardTitleText'>\n                            Include all the information someone would need to answer your question.\n                        </Card.Text>\n                        <Form.Group className=\"mb-4\">\n                            <Form.Control name=\"body\" value={body} onChange={e => setBody(e.target.value)} as=\"textarea\" rows={5} required />\n                        </Form.Group>\n\n                        {/* Tags Field */}\n\n                        <Card.Title className='cardTitleText'>Tags</Card.Title>\n                        <Card.Text className='cardTitleText'>\n                            Add up to 5 tags to describe what your question is about\n                        </Card.Text>\n                        <Form.Group className=\"mb-4\">\n                            <Form.Control type=\"text\" value={tags} name=\"tags\" onChange={e => setTags(e.target.value)} placeholder=\"e.g.  python  javacript  django\" required/>\n                        </Form.Group>\n\n                        {/* Submit Button */}\n\n                        <div className=\"d-grid gap-2\">\n                            <Button variant=\"outline-primary\" type='submit' size=\"lg\">Post Your Question</Button>\n                        </div>\n                    </Card.Body>\n                </Form>\n                </Card>\n                </React.Fragment>\n            }\n\n\n        </Container>\n    )\n}\n\nexport default AskQuesPage","import React, { useContext, useEffect, useState, useCallback} from 'react'\nimport { Card, Button, Container, Row, Col, Alert } from 'react-bootstrap'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\n\nimport AuthContext from '../context/AuthContext'\nimport useAxios from '../utils/useAxios'\n\nimport '../App.css'\nimport '../css/profilePage.css'\n\nimport Loader from '../components/Loader'\n\nconst ProfilePage = () => {\n\n    const { user, \n            show, \n            alertType, \n            alertMsg, \n            setShow, \n            setAlertType, \n            setAlertMsg, \n            handleVisibility, \n            baseUrl,\n            strFormatter } = useContext(AuthContext)\n\n    const [isAuthorized, setIsAuthorized] = useState(false)\n    const navigate = useNavigate()\n\n    const api = useAxios()\n\n    const { username } = useParams()\n\n    const [fullName, setFullName] = useState('')\n    const [email, setEmail] = useState('')\n    const [location, setLocation] = useState('')\n    const [bio, setBio] = useState('')\n\n    const [questions, setQuestions] = useState([])\n    const [answers, setAnswers] = useState([])\n\n    const [loading, setLoading] = useState(true)\n\n    document.title = 'Profile'\n\n    const getProfile = useCallback(async () => {\n        const response = await api.get(`${baseUrl}/profile/${username}/`)\n        if(response['data'].status === 404){\n            navigate('/page-not-found')\n        }\n        else if(response.status === 200){\n            const data = await response['data']\n            const userData = data['profile']\n            const userQuestions = data['questions']\n            const userAnswers = data['answers']\n            setFullName(userData.full_name)\n            setEmail(userData.email)\n            setLocation(userData.location)\n            setBio(userData.bio)\n            setQuestions(userQuestions)\n            setAnswers(userAnswers)\n\n            setLoading(false)\n        }\n    }, [username])\n\n\n    const authorized = useCallback(() => {\n        if(username === user['username']){\n            setIsAuthorized(true)\n        }\n    }, [username])\n\n\n    useEffect(() => {\n        getProfile()\n        authorized()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [getProfile, authorized])\n\n\n    const deleteQues = async questionSlug => {\n\n        setLoading(true)\n        \n        const response = await api.delete(`${baseUrl}/question/${questionSlug}`)\n        if(response.status === 204){\n            getProfile()\n            setAlertType('success')\n            setAlertMsg('Question deleted')\n            handleVisibility()\n        }\n        navigate(`/profile/${user['username']}`)\n    }\n\n\n    const deleteAns = async answerId => {\n\n        setLoading(true)\n\n        const response = await api.delete(`${baseUrl}/answer/${answerId}`)\n        if(response.status === 204){\n            getProfile()\n            setAlertType('success')\n            setAlertMsg('Answer deleted')\n            handleVisibility()\n        }\n        navigate(`/profile/${user['username']}`)\n    }\n\n\n    return (\n\n  \n\n        <Container>\n\n            { loading ?\n                <Loader/>\n                :\n                <React.Fragment>\n                { show ?\n        \n                    <Alert variant={alertType} className='text-center' onClose={() => setShow(false)} dismissible>{alertMsg}</Alert>\n                    : \n                    null\n                }\n    \n                <Card>\n                    <Card.Body>\n                        <Card.Title className='text-center'><h3><i>{ fullName }</i></h3></Card.Title>\n                        <br/>\n                        <Card.Text className='profile-info'>\n                            <p><i className=\"fa fa-envelope profile_info\"> {email ? email : \"Email not available\"}</i></p>\n                            <p><i className=\"fa fa-map-marker profile_info\"> {location ? location : \"Location not available\"}</i></p>\n                            <p><i className=\"fa fa-info-circle profile_info\"> {bio ? bio: \"Bio not available\"}</i></p>\n                        </Card.Text>\n                    \n                        {/* Update Profile Button */}\n    \n                        { isAuthorized ?\n                            <Link className='link' to='/edit_profile'>\n                                <div className=\"d-grid gap-2\">\n                                    <Button variant=\"outline-secondary\" size=\"lg\">\n                                        <i>Update Your Profile</i>\n                                    </Button>\n                                </div>\n                            </Link>\n                            : \n                            null\n                        }\n    \n                    </Card.Body>\n                    \n                    </Card>\n                    \n                    <Row>\n    \n                        {/* Questions Column */}\n    \n                        <Col className='p-5'>\n                    \n                        <h5 className='text-center'>{questions.length}{questions.length === 1 ? ' Question' : ' Questions'}</h5>\n                        <br/>\n                        { questions.map(question => (\n    \n                            <React.Fragment key={question.id}>\n                                <Card className='p-3'>\n                                        \n                                <Link className='link' to={`/question/${question.slug}/`}><div className='ques-ans-body'>{strFormatter(question.title)}</div></Link>\n                                \n                                { isAuthorized ? \n                                    <React.Fragment>\n                                        <br/>\n                                       \n                                        <Row>\n                                            <Col className='p-1'>\n                                                <Link className='link' to={`/update_question/${question.slug}/`}>\n                                                    <div className=\"d-grid gap-2\">\n                                                        <Button variant='outline-success btn-sm'>Edit</Button>\n                                                    </div>\n                                                </Link>\n                                            </Col>\n                                            <Col className='p-1'>\n                                                <div className=\"d-grid gap-2\" onClick={() => deleteQues(question.slug)}>\n                                                    <Button variant='outline-danger btn-sm'>Delete</Button>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                      \n                                    </React.Fragment>   \n                                    :\n                                    null \n                                }\n                                 \n                                 </Card>\n                                 <br/>\n                            </React.Fragment>\n                           \n                        ))}\n                      \n                        </Col>\n    \n                        {/* Answers Column */}\n    \n                        <Col className='p-5'>\n                            \n                            <h5 className='text-center'>{answers.length}{answers.length === 1 ? ' Answer' : ' Answers'}</h5>\n                            <br/>\n                            { answers.map(answer => (\n                                <React.Fragment key={answer.id}>\n                                     <Card className='p-3'>\n                                         \n                                    <Link className='link' to={`/question/${answer.question_slug}/`}><div className='ques-ans-body'>{strFormatter(answer.answer)}</div></Link>\n                                    {\n                                        isAuthorized ? \n                                        <React.Fragment>\n                                        <br/>\n                                        <Row>\n                                            <Col className='p-1'>\n                                        <Link className='link' to={`/edit_answer/${answer.id}`}>\n                                            <div className=\"d-grid gap-2\">\n                                                <Button variant='outline-success btn-sm'>Edit</Button>\n                                            </div>\n                                        </Link>\n                                        </Col>\n                                        <Col className='p-1'>\n                                        <div className=\"d-grid gap-2\" onClick={() => deleteAns(answer.id)}>\n                                            <Button variant='outline-danger btn-sm'>Delete</Button>\n                                        </div>\n                                        </Col>\n                                        </Row>\n                                        </React.Fragment>\n                                        :\n                                        null \n                                    }\n                                    \n                                    </Card>\n                                    <br/>\n                                </React.Fragment>  \n                                \n                            ))}\n                            \n                        </Col>\n                    </Row>\n                    </React.Fragment>\n            }\n        </Container>\n    )\n}\n\nexport default ProfilePage","import React, {useContext, useEffect, useState} from 'react'\nimport { Card, Form, Button, Container } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\n\nimport AuthContext from '../context/AuthContext'\nimport useAxios from '../utils/useAxios'\n\nimport '../App.css'\nimport '../css/editProfilePage.css'\n\nimport Loader from '../components/Loader'\n\nconst EditProfilePage = () => {\n\n    const { user, \n            setAlertType, \n            setAlertMsg, \n            handleVisibility,\n            baseUrl } = useContext(AuthContext)\n    \n    const navigate = useNavigate()\n\n    const api = useAxios()\n\n    const [update, setUpdate] = useState(false)\n\n    const [fullName, setFullName] = useState('')\n    const [email, setEmail] = useState('')\n    const [location, setLocation] = useState('')\n    const [bio, setBio] = useState('')\n\n    const [loading, setLoading] = useState(true)\n\n    document.title = 'Update Your Profile'\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if(update){\n            updateProfile()\n        }else{\n            createProfile()\n        }\n    }\n\n \n    const createProfile = async () => {\n        const formData = JSON.stringify({'full_name':fullName, 'email':email, 'location':location, 'bio':bio})\n        const response = await api.post(`${baseUrl}/profile/`, formData, {\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n\n        if(response.status === 200){\n            setAlertType('success')\n            setAlertMsg('Profile updated')\n            handleVisibility()\n        }\n        navigate(`/profile/${user['username']}`)\n    }\n\n\n    const updateProfile = async () => {\n        const formData = JSON.stringify({'full_name':fullName, 'email':email, 'location':location, 'bio':bio})\n        const response = await api.put(`${baseUrl}/profile/${user['username']}/`, formData, {\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n\n        if(response.status === 200){\n            setAlertType('success')\n            setAlertMsg('Profile updated')\n            handleVisibility()\n        }\n        navigate(`/profile/${user['username']}`)\n    }\n\n\n    const getProfile = async () => {\n        const response = await api.get(`${baseUrl}/profile/${user['username']}/`)\n        if(response.status === 200){\n            setUpdate(true)\n        }\n        const data = await response['data']\n        setFullName(data['profile'].full_name)\n        setEmail(data['profile'].email)\n        setLocation(data['profile'].location)\n        setBio(data['profile'].bio)\n\n        setLoading(false)\n    }\n\n\n    useEffect(() => {\n        getProfile()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return (\n        <Container>\n            { loading ?\n                <Loader/>\n                :\n            <React.Fragment>\n                <Card>\n                <br/>\n                <Card.Title className='text-center'><h3>Complete Your Profile</h3></Card.Title>\n                <br/>\n                <Form onSubmit={handleSubmit}>\n\n                {/* Full Name Field */}\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Control type=\"text\" value={fullName} onChange={e => setFullName(e.target.value)} placeholder=\"Full Name\" required />\n                    </Form.Group>\n\n                {/* Email Field */}\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Control type=\"email\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" required />\n                    </Form.Group>\n\n                {/* Location Field */}\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Control type=\"text\" value={location} onChange={e => setLocation(e.target.value)} placeholder=\"Location\" required />\n                    </Form.Group>\n\n                {/* Bio Field */}\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Control placeholder=\"About me\" value={bio} onChange={e => setBio(e.target.value)} as=\"textarea\" rows={4} required />\n                    </Form.Group>\n\n                {/* Submit Button */}\n\n                    <div className=\"d-grid gap-2\">\n                        <Button variant=\"outline-primary\" type='submit' size=\"lg\">Save</Button>\n                    </div>\n                </Form>\n            </Card>\n            </React.Fragment>\n            }\n        </Container>\n    )\n}\n\nexport default EditProfilePage","import React from 'react'\n\nconst UpVoteTri = () => {\n\n    const triangleUp = {\n        width: \"0\",\n        height: \"0\",\n        border: \"solid 22px\",\n        borderColor:  \"transparent  transparent rgb(158, 149, 149) transparent\"\n    }\n\n    return (\n        <div>\n            <div style={triangleUp} className=\"triangle-up\"></div>\n        </div>\n    )\n}\n\nexport default UpVoteTri","import React from 'react'\n\nconst DownVoteTri = () => {\n\n    const triangleDown = {\n        width: \"0\",\n        height: \"0\",\n        border: \"solid 22px\",\n        borderColor:  \"rgb(158, 149, 149) transparent  transparent  transparent\"\n    }\n\n    return (\n        <div>\n            <div style={triangleDown} className=\"triangle-down\"></div>\n        </div>\n    )\n}\n\nexport default DownVoteTri","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CreatedInfo = (props) => {\n    return (\n        <div>\n            <small>Asked on <strong> {props.time} by <Link style={{textDecoration: \"none\"}} to={`/profile/${props.user}`}>{props.user}</Link></strong></small>\n        </div>\n    )\n}\n\nexport default CreatedInfo\n","import React, {useState, useEffect, useContext} from 'react'\nimport { Row, Col, Button, Form, Alert, Container } from 'react-bootstrap'\nimport UpVoteTri from '../components/UpVoteTri'\nimport DownVoteTri from '../components/DownVoteTri'\nimport CreatedInfo from '../components/CreatedInfo'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\nimport useAxios from '../utils/useAxios'\n\nimport '../App.css'\nimport '../css/questionPage.css'\n\nimport Loader from '../components/Loader'\n\nconst QuestionPage = () => {\n\n    const { viewsFormatter, \n            show, \n            alertType, \n            alertMsg, \n            setShow, \n            setAlertType, \n            setAlertMsg, \n            handleVisibility, \n            baseUrl } = useContext(AuthContext)\n\n    const api = useAxios()\n\n    const navigate = useNavigate()\n\n    const {slug} = useParams()\n    \n    const [quesId, setQuesId] = useState(0)\n    const [quesTitle, setQuesTitle] = useState('')\n    const [quesBody, setQuesBody] = useState('')\n    const [quesTags, setQuesTags] = useState('')\n    const [quesUser,setQuesUser] = useState('')\n    const [quesSlug, setQuesSlug] = useState('')\n    const [quesCreatedAt, setQuesCreatedAt] = useState('')\n    const [quesViews, setQuesViews] = useState(0)\n    const [quesVotes, setQuesVotes] = useState(0)\n    \n    const [answers, setAnswers] = useState([])\n    const [answer, setAnswer] = useState('')\n\n    const [loading, setLoading] = useState(true)\n\n    document.title = quesTitle\n\n    const getQuestion = async () => {\n        const response = await api.get(`${baseUrl}/question/${slug}`)\n        if(response['data'].status === 404){\n            navigate('/page-not-found')\n        }\n        else if(response.status === 200){\n            const data = await response['data']\n            const quesData = data['question']\n            setQuesId(quesData.id)\n            setQuesTitle(quesData.title)\n            setQuesBody(quesData.body)\n            setQuesTags(quesData.tags)\n            setQuesUser(quesData.user)\n            setQuesSlug(quesData.slug)\n            setQuesCreatedAt(quesData.created_at)\n            setQuesViews(quesData.views)\n            setQuesVotes(quesData.votes)\n            \n            setAnswers(data['answers'])\n\n            setLoading(false)\n        }\n    }\n\n\n    const clearAnswerTextField = () => document.getElementById('answer-field').value = '' \n\n\n    const answerCreate = async (e) => {\n        e.preventDefault()   \n\n        setLoading(true)\n        clearAnswerTextField()\n\n        const formData = JSON.stringify({'answer': answer})\n\n        const response = await api.post(`${baseUrl}/answer_create/${quesId}/`, formData, {\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.status === 201){\n            getQuestion()\n            setAlertType('success')\n            setAlertMsg('Answer Posted')             \n        }\n        handleVisibility()\n        navigate(`/question/${quesSlug}`)\n    }\n\n\n    const upVoteQues = async () => {\n\n        setLoading(true)\n\n        const response = await api.post(`${baseUrl}/upvote_ques/${quesId}/`,{\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.status === 201){\n            getQuestion()\n            setAlertType('success')\n            setAlertMsg('You have upvoted this question')             \n        }\n        else if(response.status === 208){\n            getQuestion()\n            setAlertType('info')\n            setAlertMsg('You have already upvoted this question')\n        }\n        handleVisibility()\n    }\n\n\n    const downVoteQues = async () => {\n\n        setLoading(true)\n\n        const response = await api.post(`${baseUrl}/downvote_ques/${quesId}/`,{\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.status === 201){\n            getQuestion()\n            setAlertType('success')\n            setAlertMsg('You have downvoted this question')             \n        }\n        else if(response.status === 208){\n            getQuestion()\n            setAlertType('info')\n            setAlertMsg('You have already downvoted this question')\n        }\n        handleVisibility()\n    }\n\n\n    const upVoteAns= async (ansId) => {\n\n        setLoading(true)\n\n        const response = await api.post(`${baseUrl}/upvote_ans/${ansId}/`,{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.status === 201){\n            getQuestion()\n            setAlertType('success')\n            setAlertMsg('You have upvoted this Answer')             \n        }\n        else if(response.status === 208){\n            getQuestion()\n            setAlertType('info')\n            setAlertMsg('You have already upvoted this answer')\n        }\n        handleVisibility()\n    }\n\n    const downVoteAns = async (ansId) => {\n\n        setLoading(true)\n\n        const response = await api.post(`${baseUrl}/downvote_ans/${ansId}/`,{\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.status === 201){\n            getQuestion()\n            setAlertType('success')\n            setAlertMsg('You have downvoted this Answer')             \n        }\n        else if(response.status === 208){\n            getQuestion()\n            setAlertType('info')\n            setAlertMsg('You have already downvoted this answer')\n        }\n        handleVisibility()\n    }\n\n\n    useEffect(() => {\n        getQuestion()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return (\n\n        <Container className='question-container'>\n\n            { loading ? \n                <Loader/>\n                :    \n                <React.Fragment>\n\n                { show ?\n                \n                    <Alert variant={alertType} className='text-center' onClose={() => setShow(false)} dismissible>{alertMsg}</Alert>\n                    : \n                    null\n                }\n    \n                {/* Question title */}\n    \n                <h2>{quesTitle}</h2>\n                <p className=\"p-2 views\">Viewed {viewsFormatter(quesViews)} times</p>\n                <br/>\n      \n                <Row>\n                    <Col xs={2} lg={1}>\n                        <div className='votes-first-div'>\n                            <div>\n                                <div onClick={upVoteQues}><UpVoteTri/></div>\n                                <div className=\"pt-1 pb-1 votes\">{quesVotes}</div>\n                                <div onClick={downVoteQues}><DownVoteTri/></div>\n                            </div>\n                        </div>\n                    </Col>\n           \n                    <Col xs={10} lg={11}>\n                        <div className='ques-ans-body'>{quesBody}</div>\n                    </Col>\n                    \n                </Row>\n              \n                <br/>\n    \n                {/* Question tags and created info */}\n    \n                <Row>\n                    <Col>\n                        <div className='tags-div'>\n                            { quesTags.split(/\\s+/).map((tag, index) => (\n                                <button key={index} className=\"btn-block btn btn-outline-primary btn-sm tag-btn\">{tag}</button>\n                            ))}\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className='info-div'>\n                            <CreatedInfo user={quesUser} time={quesCreatedAt}/>\n                        </div>\n                    </Col>\n                </Row>\n                <hr/>\n    \n                {/* Answers */}\n    \n                <h3 className='p-2'>{answers.length}{answers.length === 1 ? ' Answer' : ' Answers'}</h3>\n    \n                { answers.map(ans => (\n                    <div key={ans.id} className='mb-3'>\n                        <Row>\n                            <Col lg={1}>\n                                <div className='votes-first-div'>\n                                    <div>\n                                        <div onClick={() => upVoteAns(ans.id)}><UpVoteTri /></div>\n                                        <div className=\"pt-1 pb-1 votes\">{ans.votes}</div>\n                                        <div onClick={() => downVoteAns(ans.id)}><DownVoteTri/></div>\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col lg={11}>\n                                <div className='ques-ans-body'>{ans.answer}</div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <div className='info-div'>\n                                    <CreatedInfo user={ans.user} time={ans.created_at}/>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                ))}\n                \n    \n                {/* Post Your Answer */}\n    \n                <Form onSubmit={answerCreate}>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Control id='answer-field' onChange={e => setAnswer(e.target.value)} placeholder=\"Your Answer\" as=\"textarea\" rows={8} required />\n                    </Form.Group>\n                    <div className=\"d-grid gap-2\">\n                        <Button type=\"submit\" variant=\"outline-primary\" size=\"lg\">Post Your Answer</Button>\n                    </div>\n                </Form>\n                </React.Fragment>\n            }\n        </Container>\n        \n    )\n}\n\nexport default QuestionPage","import React, {useEffect, useContext, useState} from 'react'\nimport { Row, Col, Button, Form, Container  } from 'react-bootstrap'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\nimport CreatedInfo from '../components/CreatedInfo'\nimport useAxios from '../utils/useAxios'\n\nimport '../App.css'\nimport '../css/editAnswerPage.css'\n\nimport Loader from '../components/Loader'\n\nconst EditAnswerPage = () => {\n\n    const { viewsFormatter, \n            setAlertType, \n            setAlertMsg, \n            handleVisibility, \n            baseUrl } = useContext(AuthContext)\n\n    const { pk } = useParams()\n\n    const api = useAxios()\n\n    const navigate = useNavigate()\n\n    const [quesTitle, setQuesTitle] = useState('')\n    const [quesBody, setQuesBody] = useState('')\n    const [quesTags, setQuesTags] = useState('')\n    const [quesUser,setQuesUser] = useState('')\n    const [quesSlug, setQuesSlug] = useState('')\n    const [quesCreatedAt, setQuesCreatedAt] = useState('')\n    const [quesViews, setQuesViews] = useState(0)\n\n    const [answer, setAnswer] = useState('')\n\n    const [loading, setLoading] = useState(true)\n\n    document.title = quesTitle\n\n    const getAnswer = async () => {\n        const response = await api.get(`${baseUrl}/answer/${pk}`)\n        const data = await response['data']\n        const quesData = data['question']\n        setQuesTitle(quesData.title)\n        setQuesBody(quesData.body)\n        setQuesTags(quesData.tags)\n        setQuesUser(quesData.user)\n        setQuesSlug(quesData.slug)\n        setQuesCreatedAt(quesData.created_at)\n        setQuesViews(quesData.views)\n\n        setAnswer(data['answer'].answer)\n\n        setLoading(false)\n        \n    }\n\n    const updateAnswer = async (e) => {\n        e.preventDefault()\n        const formData = JSON.stringify({'answer': answer})\n        const response = await api.put(`${baseUrl}/answer/${pk}/`, formData, {\n            headers:{\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.status === 200){\n            setAlertType('success')\n            setAlertMsg('Answer Updated')\n            handleVisibility()\n        }\n        navigate(`/question/${quesSlug}`)\n    }\n\n\n\n    useEffect(() => {\n        getAnswer()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Container className='edit-ques-container'>\n\n            { loading ?\n                <Loader/>\n            :\n            <React.Fragment>\n                {/* Question */}\n\n                <React.Fragment>\n\n                <h2>{quesTitle}</h2>\n                <p className=\"p-2 views\">Viewed {viewsFormatter(quesViews)} times</p>\n                <br/>\n                <Row>\n                    <Col>\n                        <div className='ques-ans-body'>{quesBody}</div>\n                    </Col>\n                </Row>\n\n                <br/>\n\n                {/* Question tags and created info */}\n\n                <Row>\n                    <Col>\n                        <div className='tags-div'>\n                            { quesTags.split(/\\s+/).map((tag, index) => (\n                                <button key={index} className=\"btn-block btn btn-outline-primary btn-sm tag-btn\">{tag}</button>\n                            ))}\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className='createdComponent'>\n                            <CreatedInfo user={quesUser} time={quesCreatedAt}/>\n                        </div>\n                    </Col>\n                </Row>\n                <hr/>\n                </React.Fragment>\n        \n\n            {/* Answer Form */}\n\n            <Form onSubmit={updateAnswer}>  \n\n                {/* Answer Field */}\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Control value={answer} onChange={e => setAnswer(e.target.value)} placeholder=\"Your Answer\" as=\"textarea\" rows={8} required />\n                </Form.Group>\n\n                {/* Update Answer Button */}\n\n                <div className=\"d-grid gap-2\">\n                    <Button variant=\"outline-success\" type='submit' size=\"lg\">Update Answer</Button>\n                </div>\n            </Form>\n            </React.Fragment>\n            }\n        </Container>\n    )\n}\n\nexport default EditAnswerPage\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgNotFound(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 32 32\",\n    width: \"20%\",\n    height: \"20%\",\n    id: \"Layer_1\",\n    viewBox: \"0 0 32 32\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Error_x2C__lost_x2C__no_page_x2C__not_found\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 7.5,\n    cy: 5.5,\n    fill: \"#263238\",\n    r: 0.5\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 5.5,\n    cy: 5.5,\n    fill: \"#263238\",\n    r: 0.5\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 3.5,\n    cy: 5.5,\n    fill: \"#263238\",\n    r: 0.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.5,8h-29C1.224,8,1,7.776,1,7.5S1.224,7,1.5,7h29C30.776,7,31,7.224,31,7.5S30.776,8,30.5,8z\",\n    fill: \"#263238\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.5,29h-27C1.673,29,1,28.327,1,27.5v-23C1,3.673,1.673,3,2.5,3h27C30.327,3,31,3.673,31,4.5v23      C31,28.327,30.327,29,29.5,29z M2.5,4C2.224,4,2,4.225,2,4.5v23C2,27.775,2.224,28,2.5,28h27c0.276,0,0.5-0.225,0.5-0.5v-23      C30,4.225,29.776,4,29.5,4H2.5z\",\n    fill: \"#263238\"\n  })))), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.5,24c-0.276,0-0.5-0.224-0.5-0.5V21h-3.5c-0.163,0-0.315-0.079-0.409-0.212s-0.117-0.303-0.062-0.456    l2.5-7C22.6,13.133,22.789,13,23,13h1.5c0.276,0,0.5,0.224,0.5,0.5V20h0.5c0.276,0,0.5,0.224,0.5,0.5S25.776,21,25.5,21H25v2.5    C25,23.776,24.776,24,24.5,24z M21.209,20H24v-6h-0.647L21.209,20z\",\n    fill: \"#263238\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.5,24c-0.276,0-0.5-0.224-0.5-0.5V21H6.5c-0.163,0-0.315-0.079-0.409-0.212s-0.117-0.303-0.062-0.456    l2.5-7C8.6,13.133,8.789,13,9,13h1.5c0.276,0,0.5,0.224,0.5,0.5V20h0.5c0.276,0,0.5,0.224,0.5,0.5S11.776,21,11.5,21H11v2.5    C11,23.776,10.776,24,10.5,24z M7.209,20H10v-6H9.353L7.209,20z\",\n    fill: \"#263238\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5,24h-3c-0.827,0-1.5-0.673-1.5-1.5v-8c0-0.827,0.673-1.5,1.5-1.5h3c0.827,0,1.5,0.673,1.5,1.5v8    C19,23.327,18.327,24,17.5,24z M14.5,14c-0.276,0-0.5,0.225-0.5,0.5v8c0,0.275,0.224,0.5,0.5,0.5h3c0.276,0,0.5-0.225,0.5-0.5v-8    c0-0.275-0.224-0.5-0.5-0.5H14.5z\",\n    fill: \"#263238\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNotFound);\nexport default __webpack_public_path__ + \"static/media/NotFound.6e7cfd1a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useContext } from 'react'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport {\n    Link, \n    useParams\n} from \"react-router-dom\";\n\nimport AuthContext from '../context/AuthContext'\nimport useAxios from '../utils/useAxios'\nimport CreatedInfo from '../components/CreatedInfo';\nimport { ReactComponent as MagnifyingGlass } from '../assets/MagnifyingGlass.svg'\n\nimport '../App.css'\nimport '../css/questionsPage.css'\n\nimport Loader from '../components/Loader'\n\n\nconst SearchedQuesPage = () => {\n\n    const { viewsFormatter,\n            baseUrl } = useContext(AuthContext)\n\n    const { search } = useParams()\n\n    const api = useAxios()\n \n    const [searchedQuestions, setSearchedQuestions] = useState([])\n    const [isQuestions, setIsQuestions] = useState(true)\n\n    const [loading, setLoading] = useState(true)\n\n    document.title = 'Stack Overflow - Where Developers Learn, Share, &amp; Build Careers'\n\n    const getSearchedQues = async () => {\n        const response = await api.get(`${baseUrl}/searched_ques/${search}`)\n        if(response['data'].status === 404){\n            setIsQuestions(false)\n       \n        }else if(response.status === 200){\n            const data = await response['data']\n            setSearchedQuestions(data)  \n           \n        } \n        setLoading(false)\n    }\n\n    useEffect(() => {\n        getSearchedQues()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Container>\n            { loading ?\n            <Loader/>\n        :\n        <React.Fragment>\n            <br/>\n\n            {/* If Question(s) not found */}\n\n            { !isQuestions ?\n            \n            <div className='text-center'>\n                <div><MagnifyingGlass /></div>\n                <br/>\n                <br/>\n                <h4>We couldn't find anything for <strong>{search}</strong></h4>\n                <h5>Try different or less specific keywords</h5>\n                <h5>Browse our <Link style={{textDecoration: \"none\"}} to=\"/questions\">questions</Link></h5>\n            </div>\n            :\n            <React.Fragment>\n\n            {/* If Question(s) found */}\n      \n            { searchedQuestions.map(question => (\n               \n                <Row style={{marginTop: \"1%\"}} key={question.id}>\n                    <Col>\n                        <div className=\"text-center votes-ans-views-div\">\n                            <div style={{color: question.votes > 0 ? \"#009900\": question.votes < 0 ? \"#FF3333\": \"#404040\", flex: \"0.3\"}}>{question.votes}<br/>Votes</div>\n                            <div style={{color: question.ans_count > 0 ? \"#FF8000\": \"#404040\", flex: \"0.3\"}}>{question.ans_count}<br/>Answers</div>\n                            <div style={{color: question.views > 999 ? \"#994C00\": \"#404040\", flex: \"0.3\"}}>{viewsFormatter(question.views)}<br/>Views</div> \n                        </div>\n                    </Col>\n                    <Col md={8}>\n\n                        <h5><Link style={{textDecoration: \"none\"}} to={`/question/${question.slug}`}>{question.title}</Link></h5>\n\n                        {/* Question Tags */}\n\n                        <div className='tags-div'>\n                            { question.tags.split(/\\s+/).map((tag, index) => (\n                                <button key={index} className=\"btn-block btn btn-outline-primary btn-sm tag-btn\">{tag}</button>\n                            ))}\n                        </div>\n                        <div className='info-div'>\n                            <CreatedInfo user={question.user} time={question.created_at} />\n                        </div>\n                    </Col>\n                    <hr/>\n                </Row>\n                ))}\n            </React.Fragment>\n        }\n        </React.Fragment>\n        }\n        </Container>\n    )\n}\n\nexport default SearchedQuesPage","import React, { useContext } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport AuthContext from '../context/AuthContext'\n\n\nconst PrivateRoute = ({children}) => {\n\n    const {user} = useContext(AuthContext)\n\n    return user ? children : <Navigate to=\"/login\" />;\n}\n\nexport default PrivateRoute;","import React, { useState, useEffect, useContext } from 'react'\nimport { Button, Row, Col, Container, Alert, Navbar, Nav } from 'react-bootstrap'\nimport {\n    Link\n} from \"react-router-dom\"\n\nimport AuthContext from '../context/AuthContext'\nimport CreatedInfo from '../components/CreatedInfo'\nimport useAxios from '../utils/useAxios'\n\nimport '../App.css'\nimport '../css/questionsPage.css'\n\nimport Loader from '../components/Loader'\n\nconst QuestionsPage = () => {\n\n    const { viewsFormatter, \n            show, \n            alertType, \n            alertMsg, \n            setShow, \n            baseUrl,\n            strFormatter } = useContext(AuthContext)\n\n    const api = useAxios()\n\n    const [questions, setQuestions] = useState([])\n    const [questionOrder, setQuestionOrder] = useState('')\n\n    const [loading, setLoading] = useState(true)\n\n\n    document.title = 'Stack Overflow - Where Developers Learn, Share, &amp; Build Careers'\n \n    const getQuestions = async () => {\n\n        setLoading(true)\n\n        const response = await api.get(`${baseUrl}/question/`)\n        const data = response['data']\n        const questions = data['questions']\n        const viewBy = data['question_order']\n        setQuestions(questions)\n        setQuestionOrder(viewBy)\n\n        setLoading(false)\n    }\n\n\n    const latestQuestions = async () => {\n\n        setLoading(true)\n\n        const response = await api.get(`${baseUrl}/question?q=latest`)\n        const data = await response['data']\n        const questions = await data['questions']\n        const viewBy = await data['question_order']\n        setQuestions(questions)\n        setQuestionOrder(viewBy)\n\n        setLoading(false)\n    }\n\n\n    useEffect(() => {\n        getQuestions()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    \n    return (\n       \n        <Container className='container'>\n\n            { show ?\n                <Alert variant={alertType} className='text-center' onClose={() => setShow(false)} dismissible>{alertMsg}</Alert>\n                : \n                null\n            }\n        \n            <div className=\"first-div\">\n                <h3>Questions</h3>\n                <Link to=\"/ask\"><Button variant=\"primary\">Ask</Button></Link>\n            </div>\n            <Navbar className='nav-style justify-content-center'>\n                <Nav className=\"pagination-sm\"> \n                    <React.Fragment>\n                        <Nav.Item onClick={latestQuestions} className={`page-item ${questionOrder === 'latest'? 'active': null}`}><Link className=\"page-link\" to=\"?q=latest\">Latest</Link></Nav.Item>\n                        <Nav.Item onClick={getQuestions} className={`page-item ${questionOrder !== 'latest'? 'active': null}`}><Link className=\"page-link\" to=\"?q=mostviewed\">Most viewed</Link></Nav.Item>\n                    </React.Fragment>\n                </Nav>\n            </Navbar>\n            <br/>\n\n            { loading ?\n                <Loader/>\n                :\n                <React.Fragment>\n\n                {/* Questions List */}\n    \n                { questions.map(question => (\n                    <React.Fragment key={question.id}>\n                    <Row>\n                        <Col lg={4}>\n                            <div className=\"text-center votes-ans-views-div\">\n                                <div style={{color: question.votes > 0 ? \"#009900\": question.votes < 0 ? \"#FF3333\": \"#404040\", flex: \"0.3\"}}>{question.votes}<br/>Votes</div>\n                                <div style={{color: question.ans_count > 0 ? \"#FF8000\": \"#404040\", flex: \"0.3\"}}>{question.ans_count}<br/>Answers</div>\n                                <div style={{color: question.views > 999 ? \"#994C00\": \"#404040\", flex: \"0.3\"}}>{viewsFormatter(question.views)}<br/>Views</div> \n                            </div>\n                        </Col>\n                        <Col lg={8}>\n    \n                            {/* Question Title */}\n                       \n                            <h5><Link style={{textDecoration: \"none\"}} to={`/question/${question.slug}`}>{strFormatter(question.title)}</Link></h5>\n                     \n                            {/* Question Tags */}\n                            \n                            <div className='tags-div'>\n                                { question.tags.split(/\\s+/).map((tag, index) => (\n                                    <button key={index} className=\"btn-block btn btn-outline-primary btn-sm tag-btn\">{tag}</button>\n                                ))}\n                            </div>\n                                \n                            <div className='info-div'>\n                                <CreatedInfo user={question.user} time={question.created_at} />\n                            </div>\n    \n                        </Col>\n                    </Row>\n                    <br/>\n                    </React.Fragment>\n                ))}\n    \n                </React.Fragment>\n            }\n        </Container>\n    )\n}\n\nexport default QuestionsPage","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { ReactComponent as NotFound } from '../assets/NotFound.svg'\n\nconst PageNotFound = () => {\n\n    document.title = 'Page not found'\n\n    return (\n        <Container className='text-center'>\n            <div><NotFound /></div>\n            <h1>Page not found</h1>\n            <h5>We're sorry, we couldn't find the page you requested.</h5>\n            <h5>Browse our <Link style={{textDecoration: \"none\"}} to=\"/questions\">questions</Link></h5>\n            <h5><Link style={{textDecoration: \"none\"}} to=\"/ask\">Ask</Link> a question</h5>\n        </Container>\n    )\n}\n\nexport default PageNotFound\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  BrowserRouter,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nimport Header from './components/Header';\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport AskQuesPage from './pages/AskQuesPage';\nimport ProfilePage from './pages/ProfilePage';\nimport EditProfilePage from './pages/EditProfilePage';\nimport QuestionPage from './pages/QuestionPage';\nimport EditAnswerPage from './pages/EditAnswerPage';\nimport SearchedQuesPage from './pages/SearchedQuesPage';\nimport { AuthProvider } from './context/AuthContext'\nimport PrivateRoute from './utils/PrivateRoute'\nimport QuestionsPage from './pages/QuestionsPage';\nimport PageNotFound from './pages/PageNotFound';\n\n\nexport default function App() {\n\n  return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <AuthProvider>\n            <Header />\n            <Routes>\n\n              {/* Public Routes */}\n\n              <Route path=\"/signup\" element={<SignupPage />} />\n              <Route path=\"/login\" element={<LoginPage />} />\n\n              {/* Private Routes */}\n\n              <Route>\n                  {[\"/\", \"/questions\"].map((path, index) => \n                      <Route path={path} element={<PrivateRoute><QuestionsPage /></PrivateRoute>} key={index} />\n                  )}\n              </Route>\n              <Route path='/questions/:search' element={<PrivateRoute><SearchedQuesPage /></PrivateRoute>} />\n              <Route path=\"/ask\" element={<PrivateRoute><AskQuesPage /></PrivateRoute>} />\n              <Route path=\"/update_question/:slug\" element={<PrivateRoute><AskQuesPage /></PrivateRoute>} />\n              <Route path=\"/profile/:username\" element={<PrivateRoute><ProfilePage /></PrivateRoute>} />\n              <Route path=\"/edit_profile\" element={<PrivateRoute><EditProfilePage /></PrivateRoute>} />\n              <Route path=\"/question/:slug\" element={<PrivateRoute><QuestionPage /></PrivateRoute>} />\n              <Route path=\"/edit_answer/:pk\" element={<PrivateRoute><EditAnswerPage /></PrivateRoute>} />\n              <Route path=\"*\" element={<PrivateRoute><PageNotFound /></PrivateRoute>} />\n              \n            </Routes>\n          </AuthProvider>\n        </BrowserRouter>\n      </div>\n    );\n  }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}